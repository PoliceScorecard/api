{
	"info": {
		"_postman_id": "8f585f78-d63d-42f9-b09d-a30eab8721b7",
		"name": "StayWoke API",
		"description": "Local Developer API Support for StayWoke Platform.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "API Access",
			"item": [
				{
					"name": "Get Token",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/v1/token",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"v1",
								"token"
							]
						},
						"description": "You will not be able to make a request to our API without a `token` sent in an\nAuthorization Header.  This `/token` endpoint is the only public endpoint open to\nallow a `token` to be requested.  This endpoint is only required for anonymous users\nthat have not logged in.  Once the user logs in, you will need to use the `token` that\nis sent back for that user, as it will be used for authenticating that specific user.\n\nOnce a user has logged in, you will need to send over their Authentication\nToken in the HTTP Header.  A `token` is returned with a successful login.  A session\ntoken is valid for 7 days.  You can refresh your token to prevent having to log in\nagain by either adding the Request Authorization Header below, or using the\n`/api/0.1/user/refresh/` endpoint."
					},
					"response": []
				},
				{
					"name": "Refresh Session",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE1Nzc2NjExMDgsImV4cCI6MTU3ODI2NTkwOCwiaXNzIjoiQVBJIn0.FwB2-_9yQekE3bx4vlwYYXJ59Res0n9O9egDi8CyCww",
								"description": "This will likely return `Invalid or expired token` unless you put in a fresh token that is connected to an actual user account ( not an anonymous account )",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:5000/v1/user/refresh",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"v1",
								"user",
								"refresh"
							]
						},
						"description": "A `token` is returned with a successful login.  A session token is valid for 7 days.\nYou can refresh your token to prevent having to log in again by either adding the\nRequest Authorization Header below. `token` should be the string returned in the\n`token` parameter from a successful login."
					},
					"response": []
				}
			],
			"description": "All access to our API will require an Authentication Token. The following endpoint will get your access to endpoints that do not require user authentication.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Account Management",
			"item": [
				{
					"name": "Register",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "jane_doe",
									"description": "(string, required) - The username or email address of the account",
									"type": "text"
								},
								{
									"key": "email",
									"value": "jane.doe@fake.com",
									"description": "(string, required) - Email Address of the account",
									"type": "text"
								},
								{
									"key": "password",
									"value": "abc123",
									"description": "(string, required) - The password to the account",
									"type": "text"
								},
								{
									"key": "retype_password",
									"value": "abc123",
									"description": "(string, required) - The password to the account",
									"type": "text"
								},
								{
									"key": "agree",
									"value": "yes",
									"description": "(string, required) - Agree to TOS - User Agreed to Terms of Service",
									"type": "text"
								},
								{
									"key": "first_name",
									"value": "Jane",
									"description": "(string, optional) - First Name - NOTE: Apple does not like requiring personal info for registration",
									"type": "text"
								},
								{
									"key": "last_name",
									"value": "Doe",
									"description": "(string, optional) - Last Name - NOTE: Apple does not like requiring personal info for registration",
									"type": "text"
								},
								{
									"key": "inviteCode",
									"value": "a1b2c3",
									"description": "(string, required) - During Alpha / Beta testing, an Invitation Code is Required for registration",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "http://localhost:5000/v1/user/register/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"v1",
								"user",
								"register",
								""
							]
						},
						"description": "API Endpoint to register new users. This should set the user's `activated` field\nto `true` unless they've included their email address. If so, `activated` is\n`false` and the user will be sent an email with a `new_email_key` key to confirm\ntheir email address to complete registration."
					},
					"response": [
						{
							"name": "Response 200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "jane_doe",
											"description": "(string, required) - The username or email address of the account",
											"type": "text"
										},
										{
											"key": "email",
											"value": "jane.doe@fake.com",
											"description": "(string, required) - Email Address of the account",
											"type": "text"
										},
										{
											"key": "password",
											"value": "abc123",
											"description": "(string, required) - The password to the account",
											"type": "text"
										},
										{
											"key": "retype_password",
											"value": "abc123",
											"description": "(string, required) - The password to the account",
											"type": "text"
										},
										{
											"key": "agree",
											"value": "yes",
											"description": "(string, required) - Agree to TOS - User Agreed to Terms of Service",
											"type": "text"
										},
										{
											"key": "first_name",
											"value": "Jane",
											"description": "(string, optional) - First Name - NOTE: Apple does not like requiring personal info for registration",
											"type": "text"
										},
										{
											"key": "last_name",
											"value": "Doe",
											"description": "(string, optional) - Last Name - NOTE: Apple does not like requiring personal info for registration",
											"type": "text"
										},
										{
											"key": "inviteCode",
											"value": "a1b2c3",
											"description": "(string, required) - During Alpha / Beta testing, an Invitation Code is Required for registration",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "http://localhost:5000/v1/user/register/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"v1",
										"user",
										"register",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "API"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Access-Control-Allow-Methods, Authorization, Content-Type, X-Powered-By"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "OPTIONS, GET, POST, PUT, DELETE"
								},
								{
									"key": "X-Rate-Limit-Limit",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Remaining",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Reset",
									"value": "86033592"
								},
								{
									"key": "Content-Length",
									"value": "764"
								},
								{
									"key": "ETag",
									"value": "W/\"2fc-UMDjxm6431t2ob6fa3fzyWDkwPI\""
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jan 2020 06:36:27 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"notices\": [],\n    \"warnings\": [],\n    \"errors\": [],\n    \"field_errors\": {},\n    \"meta\": {\n        \"total\": 1,\n        \"showing\": 1,\n        \"pages\": 1,\n        \"page\": 1\n    },\n    \"data\": {\n        \"activated\": false,\n        \"banned\": false,\n        \"created_date\": \"2020-01-02T06:36:27.604Z\",\n        \"email\": \"jane.doe@fake.com\",\n        \"first_name\": \"Jane\",\n        \"hash_id\": \"LJxKVm\",\n        \"id\": 13,\n        \"last_name\": \"Doe\",\n        \"modified_date\": \"2020-01-02T06:36:27.604Z\",\n        \"profile_name\": \"jane_doe\",\n        \"username\": \"jane_doe\"\n    },\n    \"attribution\": {\n        \"text\": \"Data Provided by StayWoke\",\n        \"website\": \"https://staywoke.org\",\n        \"link\": \"<a href=\\\"https://staywoke.org\\\">Data Provided by StayWoke</a>\",\n        \"license\": \"https://raw.githubusercontent.com/staywoke/api/master/LICENSE\",\n        \"report_bug\": \"https://github.com/staywoke/api/issues/new\",\n        \"logo\": \"https://cdn.staywoke.org/common/logo.png\",\n        \"icon\": \"https://cdn.staywoke.org/common/icon.png\"\n    }\n}"
						},
						{
							"name": "Response 400",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "jane_doe",
											"description": "(string, required) - The username or email address of the account",
											"type": "text"
										},
										{
											"key": "email",
											"value": "jane.doe@fake.com",
											"description": "(string, required) - Email Address of the account",
											"type": "text"
										},
										{
											"key": "password",
											"value": "abc123",
											"description": "(string, required) - The password to the account",
											"type": "text"
										},
										{
											"key": "retype_password",
											"value": "abc123",
											"description": "(string, required) - The password to the account",
											"type": "text"
										},
										{
											"key": "agree",
											"value": "yes",
											"description": "(string, required) - Agree to TOS - User Agreed to Terms of Service",
											"type": "text"
										},
										{
											"key": "first_name",
											"value": "Jane",
											"description": "(string, optional) - First Name - NOTE: Apple does not like requiring personal info for registration",
											"type": "text"
										},
										{
											"key": "last_name",
											"value": "Doe",
											"description": "(string, optional) - Last Name - NOTE: Apple does not like requiring personal info for registration",
											"type": "text"
										},
										{
											"key": "inviteCode",
											"value": "a1b2c3",
											"description": "(string, required) - During Alpha / Beta testing, an Invitation Code is Required for registration",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "http://localhost:5000/v1/user/register/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"v1",
										"user",
										"register",
										""
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "API"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Access-Control-Allow-Methods, Authorization, Content-Type, X-Powered-By"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "OPTIONS, GET, POST, PUT, DELETE"
								},
								{
									"key": "X-Rate-Limit-Limit",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Remaining",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Reset",
									"value": "86003301"
								},
								{
									"key": "Content-Length",
									"value": "585"
								},
								{
									"key": "ETag",
									"value": "W/\"249-bwF1vmU+XN/XmVEDSNT5CqKuk14\""
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jan 2020 06:36:57 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"notices\": [],\n    \"warnings\": [],\n    \"errors\": [],\n    \"field_errors\": {\n        \"username\": [\n            \"Username is already in use\"\n        ],\n        \"email\": [\n            \"Email is already in use\"\n        ]\n    },\n    \"meta\": {\n        \"total\": 0,\n        \"showing\": 0,\n        \"pages\": 1,\n        \"page\": 1\n    },\n    \"data\": null,\n    \"attribution\": {\n        \"text\": \"Data Provided by StayWoke\",\n        \"website\": \"https://staywoke.org\",\n        \"link\": \"<a href=\\\"https://staywoke.org\\\">Data Provided by StayWoke</a>\",\n        \"license\": \"https://raw.githubusercontent.com/staywoke/api/master/LICENSE\",\n        \"report_bug\": \"https://github.com/staywoke/api/issues/new\",\n        \"logo\": \"https://cdn.staywoke.org/common/logo.png\",\n        \"icon\": \"https://cdn.staywoke.org/common/icon.png\"\n    }\n}"
						}
					]
				},
				{
					"name": "Confirm Account",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/v1/user/confirm/account?key=vg6deYc9G87c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"v1",
								"user",
								"confirm",
								"account"
							],
							"query": [
								{
									"key": "key",
									"value": "vg6deYc9G87c",
									"description": "(required, string) - The `new_email_key` stored for the user"
								}
							]
						},
						"description": "During account registration, new users will be sent a link to confirm their email address.  The users account will be disabled until the user confirms the email address."
					},
					"response": [
						{
							"name": "Response 400",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/v1/user/confirm/account?key=vg6deYc9G87c",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"v1",
										"user",
										"confirm",
										"account"
									],
									"query": [
										{
											"key": "key",
											"value": "vg6deYc9G87c",
											"description": "(required, string) - The `new_email_key` stored for the user"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "API"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Access-Control-Allow-Methods, Authorization, Content-Type, X-Powered-By"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "OPTIONS, GET, POST, PUT, DELETE"
								},
								{
									"key": "X-Rate-Limit-Limit",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Remaining",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Reset",
									"value": "85921100"
								},
								{
									"key": "Content-Length",
									"value": "534"
								},
								{
									"key": "ETag",
									"value": "W/\"216-cdwTFpNXBG/yi1knx1WgBov0KG4\""
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jan 2020 06:38:20 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"notices\": [],\n    \"warnings\": [],\n    \"errors\": [\n        \"Activation Key not found\"\n    ],\n    \"field_errors\": {},\n    \"meta\": {\n        \"total\": 0,\n        \"showing\": 0,\n        \"pages\": 1,\n        \"page\": 1\n    },\n    \"data\": null,\n    \"attribution\": {\n        \"text\": \"Data Provided by StayWoke\",\n        \"website\": \"https://staywoke.org\",\n        \"link\": \"<a href=\\\"https://staywoke.org\\\">Data Provided by StayWoke</a>\",\n        \"license\": \"https://raw.githubusercontent.com/staywoke/api/master/LICENSE\",\n        \"report_bug\": \"https://github.com/staywoke/api/issues/new\",\n        \"logo\": \"https://cdn.staywoke.org/common/logo.png\",\n        \"icon\": \"https://cdn.staywoke.org/common/icon.png\"\n    }\n}"
						},
						{
							"name": "Response 200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/v1/user/confirm/account?key=vg6deYc9G87c",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"v1",
										"user",
										"confirm",
										"account"
									],
									"query": [
										{
											"key": "key",
											"value": "vg6deYc9G87c",
											"description": "(required, string) - The `new_email_key` stored for the user"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "API"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Access-Control-Allow-Methods, Authorization, Content-Type, X-Powered-By"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "OPTIONS, GET, POST, PUT, DELETE"
								},
								{
									"key": "X-Rate-Limit-Limit",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Remaining",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Reset",
									"value": "85945085"
								},
								{
									"key": "Content-Length",
									"value": "1186"
								},
								{
									"key": "ETag",
									"value": "W/\"4a2-XF0KdKesHfktnpk8Ptm5XvuEXrw\""
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jan 2020 06:37:56 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"notices\": [],\n    \"warnings\": [],\n    \"errors\": [],\n    \"field_errors\": {},\n    \"meta\": {\n        \"total\": 1,\n        \"showing\": 1,\n        \"pages\": 1,\n        \"page\": 1\n    },\n    \"data\": {\n        \"activated\": true,\n        \"banned\": false,\n        \"banned_reason\": null,\n        \"bio\": null,\n        \"company_name\": null,\n        \"created_date\": \"2020-01-02T06:36:27.000Z\",\n        \"deletedAt\": null,\n        \"email\": \"jane.doe@fake.com\",\n        \"first_name\": \"Jane\",\n        \"hash_id\": \"LJxKVm\",\n        \"id\": 13,\n        \"last_name\": \"Doe\",\n        \"location\": null,\n        \"modified_date\": \"2020-01-02T06:37:56.072Z\",\n        \"new_password_key\": null,\n        \"profile_link_1\": null,\n        \"profile_link_2\": null,\n        \"profile_link_3\": null,\n        \"profile_link_twitter\": null,\n        \"profile_link_website\": null,\n        \"profile_name\": \"jane_doe\",\n        \"profile_photo\": null,\n        \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEzLCJpYXQiOjE1Nzc5NDcwNzYsImV4cCI6MTU3ODU1MTg3NiwiaXNzIjoiQVBJIn0.Zw9n_lt-BRw-5qveMPMalQxlGXN8wT8DM5RJaz0K4jI\",\n        \"username\": \"jane_doe\"\n    },\n    \"attribution\": {\n        \"text\": \"Data Provided by StayWoke\",\n        \"website\": \"https://staywoke.org\",\n        \"link\": \"<a href=\\\"https://staywoke.org\\\">Data Provided by StayWoke</a>\",\n        \"license\": \"https://raw.githubusercontent.com/staywoke/api/master/LICENSE\",\n        \"report_bug\": \"https://github.com/staywoke/api/issues/new\",\n        \"logo\": \"https://cdn.staywoke.org/common/logo.png\",\n        \"icon\": \"https://cdn.staywoke.org/common/icon.png\"\n    }\n}"
						}
					]
				},
				{
					"name": "Confirm Email Change",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/v1/user/confirm/email?key=W8cj0gpa0Gcs",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"v1",
								"user",
								"confirm",
								"email"
							],
							"query": [
								{
									"key": "key",
									"value": "W8cj0gpa0Gcs",
									"description": "(required, string) - The `new_email_key` stored for the user"
								}
							]
						},
						"description": "When a user changes their email, they will be sent a confirmation email to both their new and old email address assuring it was them that requested the email change."
					},
					"response": [
						{
							"name": "Response 200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/v1/user/confirm/email?key=W8cj0gpa0Gcs",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"v1",
										"user",
										"confirm",
										"email"
									],
									"query": [
										{
											"key": "key",
											"value": "W8cj0gpa0Gcs",
											"description": "(required, string) - The `new_email_key` stored for the user"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "API"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Access-Control-Allow-Methods, Authorization, Content-Type, X-Powered-By"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "OPTIONS, GET, POST, PUT, DELETE"
								},
								{
									"key": "X-Rate-Limit-Limit",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Remaining",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Reset",
									"value": "85798070"
								},
								{
									"key": "Content-Length",
									"value": "1187"
								},
								{
									"key": "ETag",
									"value": "W/\"4a3-q3Xkxrmn9mSblrrCUSexgXKdbgs\""
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jan 2020 06:40:23 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"notices\": [],\n    \"warnings\": [],\n    \"errors\": [],\n    \"field_errors\": {},\n    \"meta\": {\n        \"total\": 1,\n        \"showing\": 1,\n        \"pages\": 1,\n        \"page\": 1\n    },\n    \"data\": {\n        \"activated\": true,\n        \"banned\": false,\n        \"banned_reason\": null,\n        \"bio\": null,\n        \"company_name\": null,\n        \"created_date\": \"2020-01-02T06:36:27.000Z\",\n        \"deletedAt\": null,\n        \"email\": \"jane.doe2@fake.com\",\n        \"first_name\": \"Jane\",\n        \"hash_id\": \"LJxKVm\",\n        \"id\": 13,\n        \"last_name\": \"Doe\",\n        \"location\": null,\n        \"modified_date\": \"2020-01-02T06:40:23.067Z\",\n        \"new_password_key\": null,\n        \"profile_link_1\": null,\n        \"profile_link_2\": null,\n        \"profile_link_3\": null,\n        \"profile_link_twitter\": null,\n        \"profile_link_website\": null,\n        \"profile_name\": \"jane_doe\",\n        \"profile_photo\": null,\n        \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEzLCJpYXQiOjE1Nzc5NDcyMjMsImV4cCI6MTU3ODU1MjAyMywiaXNzIjoiQVBJIn0.e8wb_qPiJNbqnXs6ryiNXKNlNf63JeV00ecnFpm08VI\",\n        \"username\": \"jane_doe\"\n    },\n    \"attribution\": {\n        \"text\": \"Data Provided by StayWoke\",\n        \"website\": \"https://staywoke.org\",\n        \"link\": \"<a href=\\\"https://staywoke.org\\\">Data Provided by StayWoke</a>\",\n        \"license\": \"https://raw.githubusercontent.com/staywoke/api/master/LICENSE\",\n        \"report_bug\": \"https://github.com/staywoke/api/issues/new\",\n        \"logo\": \"https://cdn.staywoke.org/common/logo.png\",\n        \"icon\": \"https://cdn.staywoke.org/common/icon.png\"\n    }\n}"
						},
						{
							"name": "Response 400",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/v1/user/confirm/email?key=W8cj0gpa0Gcs",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"v1",
										"user",
										"confirm",
										"email"
									],
									"query": [
										{
											"key": "key",
											"value": "W8cj0gpa0Gcs",
											"description": "(required, string) - The `new_email_key` stored for the user"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "API"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Access-Control-Allow-Methods, Authorization, Content-Type, X-Powered-By"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "OPTIONS, GET, POST, PUT, DELETE"
								},
								{
									"key": "X-Rate-Limit-Limit",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Remaining",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Reset",
									"value": "85777107"
								},
								{
									"key": "Content-Length",
									"value": "536"
								},
								{
									"key": "ETag",
									"value": "W/\"218-Rfumg1A3h+amTSHlXO8R1Q3aG4k\""
								},
								{
									"key": "Set-Cookie",
									"value": "connect.sid=s%3A27d458ec-2de6-42b7-8606-c59ab9c4d24d.2f%2BddhXx%2BV3FOKhVvACKUUSCB5Fyn%2Bo1ZCY1u8NAe0I; Path=/; HttpOnly"
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jan 2020 06:40:43 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"notices\": [],\n    \"warnings\": [],\n    \"errors\": [\n        \"Confirmation Key not found\"\n    ],\n    \"field_errors\": {},\n    \"meta\": {\n        \"total\": 0,\n        \"showing\": 0,\n        \"pages\": 1,\n        \"page\": 1\n    },\n    \"data\": null,\n    \"attribution\": {\n        \"text\": \"Data Provided by StayWoke\",\n        \"website\": \"https://staywoke.org\",\n        \"link\": \"<a href=\\\"https://staywoke.org\\\">Data Provided by StayWoke</a>\",\n        \"license\": \"https://raw.githubusercontent.com/staywoke/api/master/LICENSE\",\n        \"report_bug\": \"https://github.com/staywoke/api/issues/new\",\n        \"logo\": \"https://cdn.staywoke.org/common/logo.png\",\n        \"icon\": \"https://cdn.staywoke.org/common/icon.png\"\n    }\n}"
						}
					]
				},
				{
					"name": "Confirm Password Change",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/v1/user/confirm/password?key=W8cj0gpa0Gcs",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"v1",
								"user",
								"confirm",
								"password"
							],
							"query": [
								{
									"key": "key",
									"value": "W8cj0gpa0Gcs",
									"description": "(required, string) - The `new_password_key` stored for the user"
								}
							]
						},
						"description": "When a user changes their password, they will be sent a confirmation email assuring it was them that requested the password change."
					},
					"response": [
						{
							"name": "Response 400",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/v1/user/confirm/password?key=W8cj0gpa0Gcs",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"v1",
										"user",
										"confirm",
										"password"
									],
									"query": [
										{
											"key": "key",
											"value": "W8cj0gpa0Gcs",
											"description": "(required, string) - The `new_password_key` stored for the user"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "API"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Access-Control-Allow-Methods, Authorization, Content-Type, X-Powered-By"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "OPTIONS, GET, POST, PUT, DELETE"
								},
								{
									"key": "X-Rate-Limit-Limit",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Remaining",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Reset",
									"value": "85653611"
								},
								{
									"key": "Content-Length",
									"value": "536"
								},
								{
									"key": "ETag",
									"value": "W/\"218-Rfumg1A3h+amTSHlXO8R1Q3aG4k\""
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jan 2020 06:42:47 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"notices\": [],\n    \"warnings\": [],\n    \"errors\": [\n        \"Confirmation Key not found\"\n    ],\n    \"field_errors\": {},\n    \"meta\": {\n        \"total\": 0,\n        \"showing\": 0,\n        \"pages\": 1,\n        \"page\": 1\n    },\n    \"data\": null,\n    \"attribution\": {\n        \"text\": \"Data Provided by StayWoke\",\n        \"website\": \"https://staywoke.org\",\n        \"link\": \"<a href=\\\"https://staywoke.org\\\">Data Provided by StayWoke</a>\",\n        \"license\": \"https://raw.githubusercontent.com/staywoke/api/master/LICENSE\",\n        \"report_bug\": \"https://github.com/staywoke/api/issues/new\",\n        \"logo\": \"https://cdn.staywoke.org/common/logo.png\",\n        \"icon\": \"https://cdn.staywoke.org/common/icon.png\"\n    }\n}"
						},
						{
							"name": "Response 200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/v1/user/confirm/password?key=W8cj0gpa0Gcs",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"v1",
										"user",
										"confirm",
										"password"
									],
									"query": [
										{
											"key": "key",
											"value": "W8cj0gpa0Gcs",
											"description": "(required, string) - The `new_password_key` stored for the user"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "API"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Access-Control-Allow-Methods, Authorization, Content-Type, X-Powered-By"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "OPTIONS, GET, POST, PUT, DELETE"
								},
								{
									"key": "X-Rate-Limit-Limit",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Remaining",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Reset",
									"value": "85674033"
								},
								{
									"key": "Content-Length",
									"value": "1187"
								},
								{
									"key": "ETag",
									"value": "W/\"4a3-OF53nWJNqM8T+PwHdAhBfxzHSx4\""
								},
								{
									"key": "Set-Cookie",
									"value": "connect.sid=s%3A12d2e10f-5f75-49f8-8746-51bee9066404.YPzLoCgeYzuAUCaSRETlpzfPR6fT66Nd%2BD95allIgGM; Path=/; HttpOnly"
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jan 2020 06:42:27 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"notices\": [],\n    \"warnings\": [],\n    \"errors\": [],\n    \"field_errors\": {},\n    \"meta\": {\n        \"total\": 1,\n        \"showing\": 1,\n        \"pages\": 1,\n        \"page\": 1\n    },\n    \"data\": {\n        \"activated\": true,\n        \"banned\": false,\n        \"banned_reason\": null,\n        \"bio\": null,\n        \"company_name\": null,\n        \"created_date\": \"2020-01-02T06:36:27.000Z\",\n        \"deletedAt\": null,\n        \"email\": \"jane.doe2@fake.com\",\n        \"first_name\": \"Jane\",\n        \"hash_id\": \"LJxKVm\",\n        \"id\": 13,\n        \"last_name\": \"Doe\",\n        \"location\": null,\n        \"modified_date\": \"2020-01-02T06:42:27.106Z\",\n        \"new_password_key\": null,\n        \"profile_link_1\": null,\n        \"profile_link_2\": null,\n        \"profile_link_3\": null,\n        \"profile_link_twitter\": null,\n        \"profile_link_website\": null,\n        \"profile_name\": \"jane_doe\",\n        \"profile_photo\": null,\n        \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEzLCJpYXQiOjE1Nzc5NDczNDcsImV4cCI6MTU3ODU1MjE0NywiaXNzIjoiQVBJIn0.iV7P6f76dP6LSrQ4HCLEjj8KFwp7qG7qhbY42b8qmKM\",\n        \"username\": \"jane_doe\"\n    },\n    \"attribution\": {\n        \"text\": \"Data Provided by StayWoke\",\n        \"website\": \"https://staywoke.org\",\n        \"link\": \"<a href=\\\"https://staywoke.org\\\">Data Provided by StayWoke</a>\",\n        \"license\": \"https://raw.githubusercontent.com/staywoke/api/master/LICENSE\",\n        \"report_bug\": \"https://github.com/staywoke/api/issues/new\",\n        \"logo\": \"https://cdn.staywoke.org/common/logo.png\",\n        \"icon\": \"https://cdn.staywoke.org/common/icon.png\"\n    }\n}"
						}
					]
				},
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "jane_doe",
									"description": "(string, required) - The username of the account",
									"type": "text"
								},
								{
									"key": "password",
									"value": "abc123",
									"description": "(string, required) - The password to the account",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:5000/v1/user/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"v1",
								"user",
								"login"
							]
						},
						"description": "Some of the API endpoints will require authentication. Those endpoints will require the `token` returned from a successful login.\n\nTo access authentication-protected endpoints, you will need to include an `Authorization` HTTP header in the format: `Bearer (token)`."
					},
					"response": [
						{
							"name": "Response 401",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "jane_doe",
											"description": "(string, required) - The username of the account",
											"type": "text"
										},
										{
											"key": "password",
											"value": "abcd123s",
											"description": "(string, required) - The password to the account",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://localhost:5000/v1/user/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"v1",
										"user",
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "API"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Access-Control-Allow-Methods, Authorization, Content-Type, X-Powered-By"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "OPTIONS, GET, POST, PUT, DELETE"
								},
								{
									"key": "X-Rate-Limit-Limit",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Remaining",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Reset",
									"value": "86398507"
								},
								{
									"key": "Content-Length",
									"value": "528"
								},
								{
									"key": "ETag",
									"value": "W/\"210-5MJ/uCivIoXT6qE68ZWjEyJkGH0\""
								},
								{
									"key": "Set-Cookie",
									"value": "connect.sid=s%3Ad9e442e9-c27e-4bee-bb2e-005669481d83.LAkM2L1OXXfFy8KS0Anb6oUKlfrV5wlISDHD3SGkH%2BU; Path=/; HttpOnly"
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jan 2020 06:51:28 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"notices\": [],\n    \"warnings\": [],\n    \"errors\": [\n        \"Incorrect Password\"\n    ],\n    \"field_errors\": {},\n    \"meta\": {\n        \"total\": 0,\n        \"showing\": 0,\n        \"pages\": 1,\n        \"page\": 1\n    },\n    \"data\": null,\n    \"attribution\": {\n        \"text\": \"Data Provided by StayWoke\",\n        \"website\": \"https://staywoke.org\",\n        \"link\": \"<a href=\\\"https://staywoke.org\\\">Data Provided by StayWoke</a>\",\n        \"license\": \"https://raw.githubusercontent.com/staywoke/api/master/LICENSE\",\n        \"report_bug\": \"https://github.com/staywoke/api/issues/new\",\n        \"logo\": \"https://cdn.staywoke.org/common/logo.png\",\n        \"icon\": \"https://cdn.staywoke.org/common/icon.png\"\n    }\n}"
						},
						{
							"name": "Response 200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "jane_doe",
											"description": "(string, required) - The username of the account",
											"type": "text"
										},
										{
											"key": "password",
											"value": "abc123",
											"description": "(string, required) - The password to the account",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://localhost:5000/v1/user/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"v1",
										"user",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "API"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Access-Control-Allow-Methods, Authorization, Content-Type, X-Powered-By"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "OPTIONS, GET, POST, PUT, DELETE"
								},
								{
									"key": "X-Rate-Limit-Limit",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Remaining",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Reset",
									"value": "85334415"
								},
								{
									"key": "Content-Length",
									"value": "1187"
								},
								{
									"key": "ETag",
									"value": "W/\"4a3-vQr+MDmbz7Qm5c1wr5NWJT8i8gw\""
								},
								{
									"key": "Set-Cookie",
									"value": "connect.sid=s%3A7e68ede1-d0e7-4f94-98a8-d7c59c34f00f.Q62Vo3dySlbfwPuV440RMSOHPL7EHtDQzwiv%2Bb6gjhE; Path=/; HttpOnly"
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jan 2020 06:48:06 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"notices\": [],\n    \"warnings\": [],\n    \"errors\": [],\n    \"field_errors\": {},\n    \"meta\": {\n        \"total\": 1,\n        \"showing\": 1,\n        \"pages\": 1,\n        \"page\": 1\n    },\n    \"data\": {\n        \"activated\": true,\n        \"banned\": false,\n        \"banned_reason\": null,\n        \"bio\": null,\n        \"company_name\": null,\n        \"created_date\": \"2020-01-02T06:36:27.000Z\",\n        \"deletedAt\": null,\n        \"email\": \"jane.doe2@fake.com\",\n        \"first_name\": \"Jane\",\n        \"hash_id\": \"LJxKVm\",\n        \"id\": 13,\n        \"last_name\": \"Doe\",\n        \"location\": null,\n        \"modified_date\": \"2020-01-02T06:42:27.000Z\",\n        \"new_password_key\": null,\n        \"profile_link_1\": null,\n        \"profile_link_2\": null,\n        \"profile_link_3\": null,\n        \"profile_link_twitter\": null,\n        \"profile_link_website\": null,\n        \"profile_name\": \"jane_doe\",\n        \"profile_photo\": null,\n        \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEzLCJpYXQiOjE1Nzc5NDc2ODYsImV4cCI6MTU3ODU1MjQ4NiwiaXNzIjoiQVBJIn0.u1AHLFy66E1pJzisJaRhJn2lrQeqAc5zwIwAE1exM20\",\n        \"username\": \"jane_doe\"\n    },\n    \"attribution\": {\n        \"text\": \"Data Provided by StayWoke\",\n        \"website\": \"https://staywoke.org\",\n        \"link\": \"<a href=\\\"https://staywoke.org\\\">Data Provided by StayWoke</a>\",\n        \"license\": \"https://raw.githubusercontent.com/staywoke/api/master/LICENSE\",\n        \"report_bug\": \"https://github.com/staywoke/api/issues/new\",\n        \"logo\": \"https://cdn.staywoke.org/common/logo.png\",\n        \"icon\": \"https://cdn.staywoke.org/common/icon.png\"\n    }\n}"
						}
					]
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEzLCJpYXQiOjE1Nzc5NDc5NTQsImV4cCI6MTU3ODU1Mjc1NCwiaXNzIjoiQVBJIn0.PEnibJhG4-IenZ9uWYfGk_W-ZLezoQVP9CEm4i4oVDw",
								"description": "This will likely return `Invalid API Authorization Token` unless you put in a fresh token that is connected to an actual user account ( not an anonymous account )",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:5000/v1/user/logout",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"v1",
								"user",
								"logout"
							]
						},
						"description": "Tell API that the user has logged out.  This will only register if a Bearer Authentication Token is set in the Header."
					},
					"response": [
						{
							"name": "Response 403",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEzLCJpYXQiOjE1Nzc5NDc5NTQsImV4cCI6MTU3ODU1Mjc1NCwiaXNzIjoiQVBJIn0.PEnibJhG4-IenZ9uWYfGk_W-ZLezoQVP9CEm4i4oVDw",
										"description": "This will likely return `Invalid API Authorization Token` unless you put in a fresh token that is connected to an actual user account ( not an anonymous account )",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://localhost:5000/v1/user/logout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"v1",
										"user",
										"logout"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "API"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Access-Control-Allow-Methods, Authorization, Content-Type, X-Powered-By"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "OPTIONS, GET, POST, PUT, DELETE"
								},
								{
									"key": "X-Rate-Limit-Limit",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Remaining",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Reset",
									"value": "86394695"
								},
								{
									"key": "Content-Length",
									"value": "541"
								},
								{
									"key": "ETag",
									"value": "W/\"21d-R9pQfhP/lpizYgkJkKzgY4K7PTE\""
								},
								{
									"key": "Set-Cookie",
									"value": "connect.sid=s%3A67f79bb9-2b2a-4966-893a-94f3a6be57ea.Qp7K7yXB9N2fRmdyG2%2FiqGjBb%2BWTSmbNZq5tptwyiGo; Path=/; HttpOnly"
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jan 2020 07:04:43 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"notices\": [],\n    \"warnings\": [],\n    \"errors\": [\n        \"Invalid API Authorization Token\"\n    ],\n    \"field_errors\": {},\n    \"meta\": {\n        \"total\": 0,\n        \"showing\": 0,\n        \"pages\": 1,\n        \"page\": 1\n    },\n    \"data\": null,\n    \"attribution\": {\n        \"text\": \"Data Provided by StayWoke\",\n        \"website\": \"https://staywoke.org\",\n        \"link\": \"<a href=\\\"https://staywoke.org\\\">Data Provided by StayWoke</a>\",\n        \"license\": \"https://raw.githubusercontent.com/staywoke/api/master/LICENSE\",\n        \"report_bug\": \"https://github.com/staywoke/api/issues/new\",\n        \"logo\": \"https://cdn.staywoke.org/common/logo.png\",\n        \"icon\": \"https://cdn.staywoke.org/common/icon.png\"\n    }\n}"
						},
						{
							"name": "Response 200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEzLCJpYXQiOjE1Nzc5NDc5NTQsImV4cCI6MTU3ODU1Mjc1NCwiaXNzIjoiQVBJIn0.PEnibJhG4-IenZ9uWYfGk_W-ZLezoQVP9CEm4i4oVDw",
										"description": "This will likely return `Invalid API Authorization Token` unless you put in a fresh token that is connected to an actual user account ( not an anonymous account )",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://localhost:5000/v1/user/logout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"v1",
										"user",
										"logout"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "API"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Access-Control-Allow-Methods, Authorization, Content-Type, X-Powered-By"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "OPTIONS, GET, POST, PUT, DELETE"
								},
								{
									"key": "X-Rate-Limit-Limit",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Remaining",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Reset",
									"value": "86314357"
								},
								{
									"key": "Content-Length",
									"value": "520"
								},
								{
									"key": "ETag",
									"value": "W/\"208-Dq5jNRNZaND5eHJR/X0ZlRivNqI\""
								},
								{
									"key": "Set-Cookie",
									"value": "connect.sid=s%3Aaa0a03ab-920b-4e85-a817-9ae49d890cf0.BaxMa7ekt337BxCmW6l3Vt8S9xy4yKgLoaBSXqno8iQ; Path=/; HttpOnly"
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jan 2020 06:52:52 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"notices\": [],\n    \"warnings\": [],\n    \"errors\": [],\n    \"field_errors\": {},\n    \"meta\": {\n        \"total\": 1,\n        \"showing\": 1,\n        \"pages\": 1,\n        \"page\": 1\n    },\n    \"data\": {\n        \"success\": true\n    },\n    \"attribution\": {\n        \"text\": \"Data Provided by StayWoke\",\n        \"website\": \"https://staywoke.org\",\n        \"link\": \"<a href=\\\"https://staywoke.org\\\">Data Provided by StayWoke</a>\",\n        \"license\": \"https://raw.githubusercontent.com/staywoke/api/master/LICENSE\",\n        \"report_bug\": \"https://github.com/staywoke/api/issues/new\",\n        \"logo\": \"https://cdn.staywoke.org/common/logo.png\",\n        \"icon\": \"https://cdn.staywoke.org/common/icon.png\"\n    }\n}"
						}
					]
				},
				{
					"name": "Forgot Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "jane.doe@fake.com",
									"description": "(required, string) - The email address of the account",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:5000/v1/user/forgot-password",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"v1",
								"user",
								"forgot-password"
							]
						},
						"description": "Forgot password will require an email address that is requesting for the password reset link."
					},
					"response": [
						{
							"name": "Response 400",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "email",
											"value": "nope@fake.com",
											"description": "(required, string) - The email address of the account",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://localhost:5000/v1/user/forgot-password",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"v1",
										"user",
										"forgot-password"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "API"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Access-Control-Allow-Methods, Authorization, Content-Type, X-Powered-By"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "OPTIONS, GET, POST, PUT, DELETE"
								},
								{
									"key": "X-Rate-Limit-Limit",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Remaining",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Reset",
									"value": "86288213"
								},
								{
									"key": "Content-Length",
									"value": "533"
								},
								{
									"key": "ETag",
									"value": "W/\"215-bN5/SI33HwHMvDGuygb3roALAVE\""
								},
								{
									"key": "Set-Cookie",
									"value": "connect.sid=s%3Aa9758e91-0d11-4b23-84c3-5f87bd901c58.2RKGOPICLbqMoO0MhHpZ0ZNHyvLSZIhMUBFRrvX3xv8; Path=/; HttpOnly"
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jan 2020 07:08:24 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"notices\": [],\n    \"warnings\": [],\n    \"errors\": [\n        \"No Matching Email Found\"\n    ],\n    \"field_errors\": {},\n    \"meta\": {\n        \"total\": 0,\n        \"showing\": 0,\n        \"pages\": 1,\n        \"page\": 1\n    },\n    \"data\": null,\n    \"attribution\": {\n        \"text\": \"Data Provided by StayWoke\",\n        \"website\": \"https://staywoke.org\",\n        \"link\": \"<a href=\\\"https://staywoke.org\\\">Data Provided by StayWoke</a>\",\n        \"license\": \"https://raw.githubusercontent.com/staywoke/api/master/LICENSE\",\n        \"report_bug\": \"https://github.com/staywoke/api/issues/new\",\n        \"logo\": \"https://cdn.staywoke.org/common/logo.png\",\n        \"icon\": \"https://cdn.staywoke.org/common/icon.png\"\n    }\n}"
						},
						{
							"name": "Response 200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "email",
											"value": "jane.doe@fake.com",
											"description": "(required, string) - The email address of the account",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://localhost:5000/v1/user/forgot-password",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"v1",
										"user",
										"forgot-password"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "API"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Access-Control-Allow-Methods, Authorization, Content-Type, X-Powered-By"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "OPTIONS, GET, POST, PUT, DELETE"
								},
								{
									"key": "X-Rate-Limit-Limit",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Remaining",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Reset",
									"value": "86316396"
								},
								{
									"key": "Content-Length",
									"value": "1025"
								},
								{
									"key": "ETag",
									"value": "W/\"401-zjbMYPjd/AtcCwvTL/8YWKOQZr4\""
								},
								{
									"key": "Set-Cookie",
									"value": "connect.sid=s%3A1b3a615d-e9a1-46ef-b16d-9e8909991e33.YWK7UbKoi9eM16Pbn4uq%2BFEc4ataoNL%2FiY3uDg%2BI1cY; Path=/; HttpOnly"
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jan 2020 07:07:56 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"notices\": [],\n    \"warnings\": [],\n    \"errors\": [],\n    \"field_errors\": {},\n    \"meta\": {\n        \"total\": 1,\n        \"showing\": 1,\n        \"pages\": 1,\n        \"page\": 1\n    },\n    \"data\": {\n        \"activated\": true,\n        \"banned\": false,\n        \"banned_reason\": null,\n        \"bio\": null,\n        \"company_name\": null,\n        \"created_date\": \"2020-01-02T06:36:27.000Z\",\n        \"deletedAt\": null,\n        \"email\": \"jane.doe@fake.com\",\n        \"first_name\": \"Jane\",\n        \"hash_id\": \"LJxKVm\",\n        \"id\": 13,\n        \"last_name\": \"Doe\",\n        \"location\": null,\n        \"modified_date\": \"2020-01-02T07:07:55.977Z\",\n        \"new_password_key\": \"ue15lbXu9EIH\",\n        \"profile_link_1\": null,\n        \"profile_link_2\": null,\n        \"profile_link_3\": null,\n        \"profile_link_twitter\": null,\n        \"profile_link_website\": null,\n        \"profile_name\": \"jane_doe\",\n        \"profile_photo\": null,\n        \"username\": \"jane_doe\"\n    },\n    \"attribution\": {\n        \"text\": \"Data Provided by StayWoke\",\n        \"website\": \"https://staywoke.org\",\n        \"link\": \"<a href=\\\"https://staywoke.org\\\">Data Provided by StayWoke</a>\",\n        \"license\": \"https://raw.githubusercontent.com/staywoke/api/master/LICENSE\",\n        \"report_bug\": \"https://github.com/staywoke/api/issues/new\",\n        \"logo\": \"https://cdn.staywoke.org/common/logo.png\",\n        \"icon\": \"https://cdn.staywoke.org/common/icon.png\"\n    }\n}"
						}
					]
				},
				{
					"name": "Reset Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "ue15lbXu9EIH",
									"description": "(required, string) - This is the `new_password_key` token that is sent from the link in the email address.",
									"type": "text"
								},
								{
									"key": "password",
									"value": "abc123",
									"description": "(required, string) - This is the new password that the user wants to reset",
									"type": "text"
								},
								{
									"key": "retype_password",
									"value": "abc123",
									"description": "(required, string) - This should be the same as 'password' and is the confirmation of the password",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:5000/v1/user/reset-password",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"v1",
								"user",
								"reset-password"
							]
						},
						"description": "Reset password will check the token against the `new_password_key` column for that user.  We will also likely want to make sure that `new_password_requested` is less than a certain age to prevent open password change requests."
					},
					"response": [
						{
							"name": "Response 400",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "token",
											"value": "ue15lbXu9EI",
											"description": "(required, string) - This is the `new_password_key` token that is sent from the link in the email address.",
											"type": "text"
										},
										{
											"key": "password",
											"value": "abc123",
											"description": "(required, string) - This is the new password that the user wants to reset",
											"type": "text"
										},
										{
											"key": "retype_password",
											"value": "abc123",
											"description": "(required, string) - This should be the same as 'password' and is the confirmation of the password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://localhost:5000/v1/user/reset-password",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"v1",
										"user",
										"reset-password"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "API"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Access-Control-Allow-Methods, Authorization, Content-Type, X-Powered-By"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "OPTIONS, GET, POST, PUT, DELETE"
								},
								{
									"key": "X-Rate-Limit-Limit",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Remaining",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Reset",
									"value": "86169502"
								},
								{
									"key": "Content-Length",
									"value": "525"
								},
								{
									"key": "ETag",
									"value": "W/\"20d-1+qFEHFxq9GLA0aVsTju7uG3Nak\""
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jan 2020 07:10:23 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"notices\": [],\n    \"warnings\": [],\n    \"errors\": [\n        \"Request Invalid\"\n    ],\n    \"field_errors\": {},\n    \"meta\": {\n        \"total\": 0,\n        \"showing\": 0,\n        \"pages\": 1,\n        \"page\": 1\n    },\n    \"data\": null,\n    \"attribution\": {\n        \"text\": \"Data Provided by StayWoke\",\n        \"website\": \"https://staywoke.org\",\n        \"link\": \"<a href=\\\"https://staywoke.org\\\">Data Provided by StayWoke</a>\",\n        \"license\": \"https://raw.githubusercontent.com/staywoke/api/master/LICENSE\",\n        \"report_bug\": \"https://github.com/staywoke/api/issues/new\",\n        \"logo\": \"https://cdn.staywoke.org/common/logo.png\",\n        \"icon\": \"https://cdn.staywoke.org/common/icon.png\"\n    }\n}"
						},
						{
							"name": "Response 200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "token",
											"value": "ue15lbXu9EIH",
											"description": "(required, string) - This is the `new_password_key` token that is sent from the link in the email address.",
											"type": "text"
										},
										{
											"key": "password",
											"value": "abc123",
											"description": "(required, string) - This is the new password that the user wants to reset",
											"type": "text"
										},
										{
											"key": "retype_password",
											"value": "abc123",
											"description": "(required, string) - This should be the same as 'password' and is the confirmation of the password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://localhost:5000/v1/user/reset-password",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"v1",
										"user",
										"reset-password"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "API"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Access-Control-Allow-Methods, Authorization, Content-Type, X-Powered-By"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "OPTIONS, GET, POST, PUT, DELETE"
								},
								{
									"key": "X-Rate-Limit-Limit",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Remaining",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Reset",
									"value": "86192160"
								},
								{
									"key": "Content-Length",
									"value": "1015"
								},
								{
									"key": "ETag",
									"value": "W/\"3f7-V5A4TdT3ESyBFX/x183CxwBBSfA\""
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jan 2020 07:10:00 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"notices\": [],\n    \"warnings\": [],\n    \"errors\": [],\n    \"field_errors\": {},\n    \"meta\": {\n        \"total\": 1,\n        \"showing\": 1,\n        \"pages\": 1,\n        \"page\": 1\n    },\n    \"data\": {\n        \"activated\": true,\n        \"banned\": false,\n        \"banned_reason\": null,\n        \"bio\": null,\n        \"company_name\": null,\n        \"created_date\": \"2020-01-02T06:36:27.000Z\",\n        \"deletedAt\": null,\n        \"email\": \"jane.doe@fake.com\",\n        \"first_name\": \"Jane\",\n        \"hash_id\": \"LJxKVm\",\n        \"id\": 13,\n        \"last_name\": \"Doe\",\n        \"location\": null,\n        \"modified_date\": \"2020-01-02T07:10:00.428Z\",\n        \"new_password_key\": null,\n        \"profile_link_1\": null,\n        \"profile_link_2\": null,\n        \"profile_link_3\": null,\n        \"profile_link_twitter\": null,\n        \"profile_link_website\": null,\n        \"profile_name\": \"jane_doe\",\n        \"profile_photo\": null,\n        \"username\": \"jane_doe\"\n    },\n    \"attribution\": {\n        \"text\": \"Data Provided by StayWoke\",\n        \"website\": \"https://staywoke.org\",\n        \"link\": \"<a href=\\\"https://staywoke.org\\\">Data Provided by StayWoke</a>\",\n        \"license\": \"https://raw.githubusercontent.com/staywoke/api/master/LICENSE\",\n        \"report_bug\": \"https://github.com/staywoke/api/issues/new\",\n        \"logo\": \"https://cdn.staywoke.org/common/logo.png\",\n        \"icon\": \"https://cdn.staywoke.org/common/icon.png\"\n    }\n}"
						}
					]
				},
				{
					"name": "Resend Email Confirmation",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/v1/user/resend-confirmation/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"v1",
								"user",
								"resend-confirmation",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "LJxKVm",
									"description": "(required, string) - This is the hash id of the user"
								}
							]
						},
						"description": "If the user needs to resend their email confirmation, this is the endpoint to use."
					},
					"response": [
						{
							"name": "Response 200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/v1/user/resend-confirmation/:id",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"v1",
										"user",
										"resend-confirmation",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "LJxKVm",
											"description": "(required, string) - This is the hash id of the user"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "API"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Access-Control-Allow-Methods, Authorization, Content-Type, X-Powered-By"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "OPTIONS, GET, POST, PUT, DELETE"
								},
								{
									"key": "X-Rate-Limit-Limit",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Remaining",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Reset",
									"value": "85929427"
								},
								{
									"key": "Content-Length",
									"value": "531"
								},
								{
									"key": "ETag",
									"value": "W/\"213-1f/moGnJPBkB9u7QrhGl4gYrnls\""
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jan 2020 07:14:22 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"notices\": [],\n    \"warnings\": [],\n    \"errors\": [],\n    \"field_errors\": {},\n    \"meta\": {\n        \"total\": 1,\n        \"showing\": 1,\n        \"pages\": 1,\n        \"page\": 1\n    },\n    \"data\": \"Confirmation Email Resent\",\n    \"attribution\": {\n        \"text\": \"Data Provided by StayWoke\",\n        \"website\": \"https://staywoke.org\",\n        \"link\": \"<a href=\\\"https://staywoke.org\\\">Data Provided by StayWoke</a>\",\n        \"license\": \"https://raw.githubusercontent.com/staywoke/api/master/LICENSE\",\n        \"report_bug\": \"https://github.com/staywoke/api/issues/new\",\n        \"logo\": \"https://cdn.staywoke.org/common/logo.png\",\n        \"icon\": \"https://cdn.staywoke.org/common/icon.png\"\n    }\n}"
						},
						{
							"name": "Response 400",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/v1/user/resend-confirmation/:id",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"v1",
										"user",
										"resend-confirmation",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "LJxKVm",
											"description": "(required, string) - This is the hash id of the user"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "API"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Access-Control-Allow-Methods, Authorization, Content-Type, X-Powered-By"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "OPTIONS, GET, POST, PUT, DELETE"
								},
								{
									"key": "X-Rate-Limit-Limit",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Remaining",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Reset",
									"value": "86096179"
								},
								{
									"key": "Content-Length",
									"value": "549"
								},
								{
									"key": "ETag",
									"value": "W/\"225-Z9D6nEsMW9b5XKHyumRkBACxaUg\""
								},
								{
									"key": "Set-Cookie",
									"value": "connect.sid=s%3A77c467cb-a4bc-4061-bb6a-71609985b996.XoBfUaInhjqTlLFSUc0Z8WxI4LPNdtsaTlbprM10lRo; Path=/; HttpOnly"
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jan 2020 07:11:36 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"notices\": [],\n    \"warnings\": [],\n    \"errors\": [\n        \"Reset Password Token Invalid of Expired\"\n    ],\n    \"field_errors\": {},\n    \"meta\": {\n        \"total\": 0,\n        \"showing\": 0,\n        \"pages\": 1,\n        \"page\": 1\n    },\n    \"data\": null,\n    \"attribution\": {\n        \"text\": \"Data Provided by StayWoke\",\n        \"website\": \"https://staywoke.org\",\n        \"link\": \"<a href=\\\"https://staywoke.org\\\">Data Provided by StayWoke</a>\",\n        \"license\": \"https://raw.githubusercontent.com/staywoke/api/master/LICENSE\",\n        \"report_bug\": \"https://github.com/staywoke/api/issues/new\",\n        \"logo\": \"https://cdn.staywoke.org/common/logo.png\",\n        \"icon\": \"https://cdn.staywoke.org/common/icon.png\"\n    }\n}"
						}
					]
				},
				{
					"name": "Update Account",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEzLCJpYXQiOjE1Nzc5NDc2ODYsImV4cCI6MTU3ODU1MjQ4NiwiaXNzIjoiQVBJIn0.u1AHLFy66E1pJzisJaRhJn2lrQeqAc5zwIwAE1exM20",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "jane_doe",
									"description": "(required, string) - Current Account Username ( required to make any changes on this endpoint )",
									"type": "text"
								},
								{
									"key": "password",
									"value": "abc123",
									"description": "(required, string) - Current Account Passsword ( required to make any changes on this endpoint )",
									"type": "text"
								},
								{
									"key": "new_username",
									"value": "jane_ray",
									"description": "(optional, string) - New Username user wishes to change their username to",
									"type": "text"
								},
								{
									"key": "new_email",
									"value": "",
									"description": "(optional, string) - New Email Address user wishes to associate with their account",
									"type": "text",
									"disabled": true
								},
								{
									"key": "password_new",
									"value": "",
									"description": "(optional, string) - New Password user wishes to use for their account",
									"type": "text",
									"disabled": true
								},
								{
									"key": "password_new_retype",
									"value": "",
									"description": "(optional, string) - Repeat the new password to make sure they match so they don't get locked out",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "http://localhost:5000/v1/user/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"v1",
								"user",
								"update"
							]
						},
						"description": "This endpoint will allow the logged in user to update their own account.  This uses the current Authentication Bearer Token to lookup who's account to update.\n\nThe Bearer Token is created during login and contains the users ID from our database.  You will not be able to use this endpoint to manage anyone elses account except your own.\n\nIMPORTANT NOTES ABOUT THIS ENDPOINT:\n\n1. Changing the username will immediatley make the old username available to the world for use.  We do check to make sure that the new username being requested is available.\n\n2. We do not immediatley change the email when requested.  Instead we send a confirmation email to both the new and old email to confirm the requested change.\n\n3. We do not immediatley change the password when requested.  We first send a confirmation email to the users current email to confirm that they made the requested change."
					},
					"response": [
						{
							"name": "Response 400",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEzLCJpYXQiOjE1Nzc5NDc2ODYsImV4cCI6MTU3ODU1MjQ4NiwiaXNzIjoiQVBJIn0.u1AHLFy66E1pJzisJaRhJn2lrQeqAc5zwIwAE1exM20",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "jane_doe",
											"description": "(required, string) - Current Account Username ( required to make any changes on this endpoint )",
											"type": "text"
										},
										{
											"key": "password",
											"value": "abc123",
											"description": "(required, string) - Current Account Passsword ( required to make any changes on this endpoint )",
											"type": "text"
										},
										{
											"key": "new_username",
											"value": "jane_ray",
											"description": "(optional, string) - New Username user wishes to change their username to",
											"type": "text"
										},
										{
											"key": "new_email",
											"value": "",
											"description": "(optional, string) - New Email Address user wishes to associate with their account",
											"type": "text",
											"disabled": true
										},
										{
											"key": "password_new",
											"value": "",
											"description": "(optional, string) - New Password user wishes to use for their account",
											"type": "text",
											"disabled": true
										},
										{
											"key": "password_new_retype",
											"value": "",
											"description": "(optional, string) - Repeat the new password to make sure they match so they don't get locked out",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "http://localhost:5000/v1/user/update",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"v1",
										"user",
										"update"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "API"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Access-Control-Allow-Methods, Authorization, Content-Type, X-Powered-By"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "OPTIONS, GET, POST, PUT, DELETE"
								},
								{
									"key": "X-Rate-Limit-Limit",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Remaining",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Reset",
									"value": "85579340"
								},
								{
									"key": "Content-Length",
									"value": "528"
								},
								{
									"key": "ETag",
									"value": "W/\"210-jEmWkVcOve0fhK8b0Fuo5Uh48EM\""
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jan 2020 07:20:13 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"notices\": [],\n    \"warnings\": [],\n    \"errors\": [\n        \"Incorrect Username\"\n    ],\n    \"field_errors\": {},\n    \"meta\": {\n        \"total\": 0,\n        \"showing\": 0,\n        \"pages\": 1,\n        \"page\": 1\n    },\n    \"data\": null,\n    \"attribution\": {\n        \"text\": \"Data Provided by StayWoke\",\n        \"website\": \"https://staywoke.org\",\n        \"link\": \"<a href=\\\"https://staywoke.org\\\">Data Provided by StayWoke</a>\",\n        \"license\": \"https://raw.githubusercontent.com/staywoke/api/master/LICENSE\",\n        \"report_bug\": \"https://github.com/staywoke/api/issues/new\",\n        \"logo\": \"https://cdn.staywoke.org/common/logo.png\",\n        \"icon\": \"https://cdn.staywoke.org/common/icon.png\"\n    }\n}"
						},
						{
							"name": "Response 200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEzLCJpYXQiOjE1Nzc5NDc2ODYsImV4cCI6MTU3ODU1MjQ4NiwiaXNzIjoiQVBJIn0.u1AHLFy66E1pJzisJaRhJn2lrQeqAc5zwIwAE1exM20",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "jane_doe",
											"description": "(required, string) - Current Account Username ( required to make any changes on this endpoint )",
											"type": "text"
										},
										{
											"key": "password",
											"value": "abc123",
											"description": "(required, string) - Current Account Passsword ( required to make any changes on this endpoint )",
											"type": "text"
										},
										{
											"key": "new_username",
											"value": "jane_ray",
											"description": "(optional, string) - New Username user wishes to change their username to",
											"type": "text"
										},
										{
											"key": "new_email",
											"value": "",
											"description": "(optional, string) - New Email Address user wishes to associate with their account",
											"type": "text",
											"disabled": true
										},
										{
											"key": "password_new",
											"value": "",
											"description": "(optional, string) - New Password user wishes to use for their account",
											"type": "text",
											"disabled": true
										},
										{
											"key": "password_new_retype",
											"value": "",
											"description": "(optional, string) - Repeat the new password to make sure they match so they don't get locked out",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "http://localhost:5000/v1/user/update",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"v1",
										"user",
										"update"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "API"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Access-Control-Allow-Methods, Authorization, Content-Type, X-Powered-By"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "OPTIONS, GET, POST, PUT, DELETE"
								},
								{
									"key": "X-Rate-Limit-Limit",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Remaining",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Reset",
									"value": "85613457"
								},
								{
									"key": "Content-Length",
									"value": "1382"
								},
								{
									"key": "ETag",
									"value": "W/\"566-NXjHUen3c1i0Dhm9oAitEpYm4RA\""
								},
								{
									"key": "Set-Cookie",
									"value": "connect.sid=s%3A4c73cdd4-3cd4-403d-843c-a2e74e44fda1.5Gb7AWyTbf1s0HuH2DBmNJKQCY2grCCmw3b3nYUZJX8; Path=/; HttpOnly"
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jan 2020 07:19:38 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"notices\": [],\n    \"warnings\": [],\n    \"errors\": [],\n    \"field_errors\": {},\n    \"meta\": {\n        \"total\": 1,\n        \"showing\": 1,\n        \"pages\": 1,\n        \"page\": 1\n    },\n    \"data\": {\n        \"messages\": [\n            \"Your username has been updated to \\\"jane_ray\\\". A confirmation of this change has been sent to your email address.\"\n        ],\n        \"title\": \"Account Updated\",\n        \"user\": {\n            \"id\": 13,\n            \"activated\": true,\n            \"username\": \"jane_ray\",\n            \"password\": \"$2b$08$AwDNpWGpjMhgY2x9osA4Ru9RPx43/zem8dXdiCeEJjcN2U9eymTmO\",\n            \"email\": \"jane.doe@fake.com\",\n            \"first_name\": \"Jane\",\n            \"last_name\": \"Doe\",\n            \"company_name\": null,\n            \"profile_name\": \"jane_doe\",\n            \"profile_photo\": null,\n            \"location\": null,\n            \"profile_link_website\": null,\n            \"profile_link_twitter\": null,\n            \"profile_link_1\": null,\n            \"profile_link_2\": null,\n            \"profile_link_3\": null,\n            \"bio\": null,\n            \"banned\": false,\n            \"banned_reason\": null,\n            \"new_password\": null,\n            \"new_password_key\": null,\n            \"new_password_requested\": null,\n            \"new_email\": null,\n            \"new_email_key\": \"w2Gn2o4bQdtv\",\n            \"new_email_requested\": \"2020-01-02T07:14:22.000Z\",\n            \"created_date\": \"2020-01-02T06:36:27.000Z\",\n            \"modified_date\": \"2020-01-02T07:19:38.959Z\",\n            \"deletedAt\": null\n        }\n    },\n    \"attribution\": {\n        \"text\": \"Data Provided by StayWoke\",\n        \"website\": \"https://staywoke.org\",\n        \"link\": \"<a href=\\\"https://staywoke.org\\\">Data Provided by StayWoke</a>\",\n        \"license\": \"https://raw.githubusercontent.com/staywoke/api/master/LICENSE\",\n        \"report_bug\": \"https://github.com/staywoke/api/issues/new\",\n        \"logo\": \"https://cdn.staywoke.org/common/logo.png\",\n        \"icon\": \"https://cdn.staywoke.org/common/icon.png\"\n    }\n}"
						}
					]
				},
				{
					"name": "Delete Account",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEzLCJpYXQiOjE1Nzc5NDc2ODYsImV4cCI6MTU3ODU1MjQ4NiwiaXNzIjoiQVBJIn0.u1AHLFy66E1pJzisJaRhJn2lrQeqAc5zwIwAE1exM20",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "jane_doe",
									"description": "(required, string) - Current Account User",
									"type": "text"
								},
								{
									"key": "password",
									"value": "abc123",
									"description": "(required, string) - Current Account Password",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:5000/v1/user/delete",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"v1",
								"user",
								"delete"
							]
						},
						"description": "This endpoint only works for the currently logged in user using the Authorization Bearer Header Token.  Once that is verified there is a second check to require the account holders username and password to double check that they just did not steal the Authentication Header to try to steal / delete the users account.\n\nIMPORTANT NOTES ABOUT THIS ENDPOINT:\n\n1. This will permanently delete the users account\n\n2. This will also permanently delete all data generated by the user\n\n3. There is no way to undo this"
					},
					"response": [
						{
							"name": "Response 400",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEzLCJpYXQiOjE1Nzc5NDc2ODYsImV4cCI6MTU3ODU1MjQ4NiwiaXNzIjoiQVBJIn0.u1AHLFy66E1pJzisJaRhJn2lrQeqAc5zwIwAE1exM20",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "jane_doe",
											"description": "(required, string) - Current Account User",
											"type": "text"
										},
										{
											"key": "password",
											"value": "abc123",
											"description": "(required, string) - Current Account Password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://localhost:5000/v1/user/delete",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"v1",
										"user",
										"delete"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "API"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Access-Control-Allow-Methods, Authorization, Content-Type, X-Powered-By"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "OPTIONS, GET, POST, PUT, DELETE"
								},
								{
									"key": "X-Rate-Limit-Limit",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Remaining",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Reset",
									"value": "85362433"
								},
								{
									"key": "Content-Length",
									"value": "528"
								},
								{
									"key": "ETag",
									"value": "W/\"210-jEmWkVcOve0fhK8b0Fuo5Uh48EM\""
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jan 2020 07:23:49 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"notices\": [],\n    \"warnings\": [],\n    \"errors\": [\n        \"Incorrect Username\"\n    ],\n    \"field_errors\": {},\n    \"meta\": {\n        \"total\": 0,\n        \"showing\": 0,\n        \"pages\": 1,\n        \"page\": 1\n    },\n    \"data\": null,\n    \"attribution\": {\n        \"text\": \"Data Provided by StayWoke\",\n        \"website\": \"https://staywoke.org\",\n        \"link\": \"<a href=\\\"https://staywoke.org\\\">Data Provided by StayWoke</a>\",\n        \"license\": \"https://raw.githubusercontent.com/staywoke/api/master/LICENSE\",\n        \"report_bug\": \"https://github.com/staywoke/api/issues/new\",\n        \"logo\": \"https://cdn.staywoke.org/common/logo.png\",\n        \"icon\": \"https://cdn.staywoke.org/common/icon.png\"\n    }\n}"
						},
						{
							"name": "Response 200",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEzLCJpYXQiOjE1Nzc5NDc2ODYsImV4cCI6MTU3ODU1MjQ4NiwiaXNzIjoiQVBJIn0.u1AHLFy66E1pJzisJaRhJn2lrQeqAc5zwIwAE1exM20",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "jane_ray",
											"description": "(required, string) - Current Account User",
											"type": "text"
										},
										{
											"key": "password",
											"value": "abc123",
											"description": "(required, string) - Current Account Password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://localhost:5000/v1/user/delete",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"v1",
										"user",
										"delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "API"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Access-Control-Allow-Methods, Authorization, Content-Type, X-Powered-By"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "OPTIONS, GET, POST, PUT, DELETE"
								},
								{
									"key": "X-Rate-Limit-Limit",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Remaining",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Reset",
									"value": "85395266"
								},
								{
									"key": "Content-Length",
									"value": "1015"
								},
								{
									"key": "ETag",
									"value": "W/\"3f7-nPmOCJWRqEkx0LggzcsIprUh69w\""
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jan 2020 07:23:17 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"notices\": [],\n    \"warnings\": [],\n    \"errors\": [],\n    \"field_errors\": {},\n    \"meta\": {\n        \"total\": 1,\n        \"showing\": 1,\n        \"pages\": 1,\n        \"page\": 1\n    },\n    \"data\": {\n        \"activated\": true,\n        \"banned\": false,\n        \"banned_reason\": null,\n        \"bio\": null,\n        \"company_name\": null,\n        \"created_date\": \"2020-01-02T06:36:27.000Z\",\n        \"deletedAt\": null,\n        \"email\": \"jane.doe@fake.com\",\n        \"first_name\": \"Jane\",\n        \"hash_id\": \"LJxKVm\",\n        \"id\": 13,\n        \"last_name\": \"Doe\",\n        \"location\": null,\n        \"modified_date\": \"2020-01-02T07:19:38.000Z\",\n        \"new_password_key\": null,\n        \"profile_link_1\": null,\n        \"profile_link_2\": null,\n        \"profile_link_3\": null,\n        \"profile_link_twitter\": null,\n        \"profile_link_website\": null,\n        \"profile_name\": \"jane_doe\",\n        \"profile_photo\": null,\n        \"username\": \"jane_ray\"\n    },\n    \"attribution\": {\n        \"text\": \"Data Provided by StayWoke\",\n        \"website\": \"https://staywoke.org\",\n        \"link\": \"<a href=\\\"https://staywoke.org\\\">Data Provided by StayWoke</a>\",\n        \"license\": \"https://raw.githubusercontent.com/staywoke/api/master/LICENSE\",\n        \"report_bug\": \"https://github.com/staywoke/api/issues/new\",\n        \"logo\": \"https://cdn.staywoke.org/common/logo.png\",\n        \"icon\": \"https://cdn.staywoke.org/common/icon.png\"\n    }\n}"
						}
					]
				}
			],
			"description": "The following endpoints are specifically setup to manage the logged in users account.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "User Interaction",
			"item": [
				{
					"name": "Get User Profile",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/v1/user/:username/profile",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"v1",
								"user",
								":username",
								"profile"
							],
							"variable": [
								{
									"key": "username",
									"value": "jane_doe",
									"description": "(required, string) - Username for requested profile"
								}
							]
						},
						"description": "Get a public profile for given `username`."
					},
					"response": [
						{
							"name": "Response 200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/v1/user/:username/profile",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"v1",
										"user",
										":username",
										"profile"
									],
									"variable": [
										{
											"key": "username",
											"value": "jane_doe",
											"description": "(required, string) - Username for requested profile"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "API"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Access-Control-Allow-Methods, Authorization, Content-Type, X-Powered-By"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "OPTIONS, GET, POST, PUT, DELETE"
								},
								{
									"key": "X-Rate-Limit-Limit",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Remaining",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Reset",
									"value": "86254443"
								},
								{
									"key": "Content-Length",
									"value": "812"
								},
								{
									"key": "ETag",
									"value": "W/\"32c-CdYjAVLI6Yz6Svw7+pd5ZQ7+YHw\""
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jan 2020 06:32:46 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"notices\": [],\n    \"warnings\": [],\n    \"errors\": [],\n    \"field_errors\": {},\n    \"meta\": {\n        \"total\": 1,\n        \"showing\": 1,\n        \"pages\": 1,\n        \"page\": 1\n    },\n    \"data\": {\n        \"bio\": null,\n        \"company_name\": null,\n        \"email\": \"jane.doe2@fake.com\",\n        \"first_name\": \"Jane2\",\n        \"last_name\": \"Doe\",\n        \"location\": null,\n        \"profile_link_1\": null,\n        \"profile_link_2\": null,\n        \"profile_link_3\": null,\n        \"profile_link_twitter\": null,\n        \"profile_link_website\": null,\n        \"profile_name\": \"jane_doe2\",\n        \"profile_photo\": null,\n        \"username\": \"jane_doe\"\n    },\n    \"attribution\": {\n        \"text\": \"Data Provided by StayWoke\",\n        \"website\": \"https://staywoke.org\",\n        \"link\": \"<a href=\\\"https://staywoke.org\\\">Data Provided by StayWoke</a>\",\n        \"license\": \"https://raw.githubusercontent.com/staywoke/api/master/LICENSE\",\n        \"report_bug\": \"https://github.com/staywoke/api/issues/new\",\n        \"logo\": \"https://cdn.staywoke.org/common/logo.png\",\n        \"icon\": \"https://cdn.staywoke.org/common/icon.png\"\n    }\n}"
						},
						{
							"name": "Response 400",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/v1/user/:username/profile",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"v1",
										"user",
										":username",
										"profile"
									],
									"variable": [
										{
											"key": "username",
											"value": "noname",
											"description": "(required, string) - Username for requested profile"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "API"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Access-Control-Allow-Methods, Authorization, Content-Type, X-Powered-By"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "OPTIONS, GET, POST, PUT, DELETE"
								},
								{
									"key": "X-Rate-Limit-Limit",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Remaining",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Reset",
									"value": "86187980"
								},
								{
									"key": "Content-Length",
									"value": "528"
								},
								{
									"key": "ETag",
									"value": "W/\"210-pXpgLReukbUW/9z3mwNhqdBCRUc\""
								},
								{
									"key": "Set-Cookie",
									"value": "connect.sid=s%3A5ee84bdb-9eda-4b9f-9723-6aafaaed6a4c.GYgsz2OlOo6rjnXAEsGWlnjg4T0BiS17n4KJKOAYG3g; Path=/; HttpOnly"
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jan 2020 06:33:53 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"notices\": [],\n    \"warnings\": [],\n    \"errors\": [\n        \"No Matching Username\"\n    ],\n    \"field_errors\": {},\n    \"meta\": {\n        \"total\": 0,\n        \"showing\": 0,\n        \"pages\": 1,\n        \"page\": 1\n    },\n    \"data\": [],\n    \"attribution\": {\n        \"text\": \"Data Provided by StayWoke\",\n        \"website\": \"https://staywoke.org\",\n        \"link\": \"<a href=\\\"https://staywoke.org\\\">Data Provided by StayWoke</a>\",\n        \"license\": \"https://raw.githubusercontent.com/staywoke/api/master/LICENSE\",\n        \"report_bug\": \"https://github.com/staywoke/api/issues/new\",\n        \"logo\": \"https://cdn.staywoke.org/common/logo.png\",\n        \"icon\": \"https://cdn.staywoke.org/common/icon.png\"\n    }\n}"
						}
					]
				},
				{
					"name": "Follow User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjE1LCJpYXQiOjE1Nzc5NTA5ODYsImV4cCI6MTU3ODU1NTc4NiwiaXNzIjoiQVBJIn0.4U2S8EQQ1Z5S687cTTzCI7IRoL_jBBP8bfvvdY8ZNZk",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:5000/v1/user/:username/follow",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"v1",
								"user",
								":username",
								"follow"
							],
							"variable": [
								{
									"key": "username",
									"value": "john_doe",
									"description": "(required, string) - Username of user you wish to follow"
								}
							]
						},
						"description": "Add's `username` to the current logged in users follow list."
					},
					"response": [
						{
							"name": "Response 200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEzLCJpYXQiOjE1Nzc5NDc2ODYsImV4cCI6MTU3ODU1MjQ4NiwiaXNzIjoiQVBJIn0.u1AHLFy66E1pJzisJaRhJn2lrQeqAc5zwIwAE1exM20",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://localhost:5000/v1/user/:username/follow",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"v1",
										"user",
										":username",
										"follow"
									],
									"variable": [
										{
											"key": "username",
											"value": "john_doe",
											"description": "(required, string) - Username of user you wish to follow"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "API"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Access-Control-Allow-Methods, Authorization, Content-Type, X-Powered-By"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "OPTIONS, GET, POST, PUT, DELETE"
								},
								{
									"key": "X-Rate-Limit-Limit",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Remaining",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Reset",
									"value": "86006755"
								},
								{
									"key": "Content-Length",
									"value": "630"
								},
								{
									"key": "ETag",
									"value": "W/\"276-gWMtohdlklCl01ex/RdiRkjAsAQ\""
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jan 2020 07:30:58 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"notices\": [],\n    \"warnings\": [],\n    \"errors\": [],\n    \"field_errors\": {},\n    \"meta\": {\n        \"total\": 1,\n        \"showing\": 1,\n        \"pages\": 1,\n        \"page\": 1\n    },\n    \"data\": {\n        \"created_date\": \"2020-01-02T07:30:58.951Z\",\n        \"follow_user_id\": 14,\n        \"id\": 1,\n        \"modified_date\": \"2020-01-02T07:30:58.951Z\",\n        \"user_id\": 13\n    },\n    \"attribution\": {\n        \"text\": \"Data Provided by StayWoke\",\n        \"website\": \"https://staywoke.org\",\n        \"link\": \"<a href=\\\"https://staywoke.org\\\">Data Provided by StayWoke</a>\",\n        \"license\": \"https://raw.githubusercontent.com/staywoke/api/master/LICENSE\",\n        \"report_bug\": \"https://github.com/staywoke/api/issues/new\",\n        \"logo\": \"https://cdn.staywoke.org/common/logo.png\",\n        \"icon\": \"https://cdn.staywoke.org/common/icon.png\"\n    }\n}"
						},
						{
							"name": "Response 400",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEzLCJpYXQiOjE1Nzc5NDc2ODYsImV4cCI6MTU3ODU1MjQ4NiwiaXNzIjoiQVBJIn0.u1AHLFy66E1pJzisJaRhJn2lrQeqAc5zwIwAE1exM20",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://localhost:5000/v1/user/:username/follow",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"v1",
										"user",
										":username",
										"follow"
									],
									"variable": [
										{
											"key": "username",
											"value": "johnd_doe",
											"description": "(required, string) - Username of user you wish to follow"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "API"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Access-Control-Allow-Methods, Authorization, Content-Type, X-Powered-By"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "OPTIONS, GET, POST, PUT, DELETE"
								},
								{
									"key": "X-Rate-Limit-Limit",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Remaining",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Reset",
									"value": "85960240"
								},
								{
									"key": "Content-Length",
									"value": "542"
								},
								{
									"key": "ETag",
									"value": "W/\"21e-GAzatlKOykgABhD9vD8dsifODjE\""
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jan 2020 07:31:45 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"notices\": [],\n    \"warnings\": [],\n    \"errors\": [\n        \"No user found for user johnd_doe\"\n    ],\n    \"field_errors\": {},\n    \"meta\": {\n        \"total\": 0,\n        \"showing\": 0,\n        \"pages\": 1,\n        \"page\": 1\n    },\n    \"data\": null,\n    \"attribution\": {\n        \"text\": \"Data Provided by StayWoke\",\n        \"website\": \"https://staywoke.org\",\n        \"link\": \"<a href=\\\"https://staywoke.org\\\">Data Provided by StayWoke</a>\",\n        \"license\": \"https://raw.githubusercontent.com/staywoke/api/master/LICENSE\",\n        \"report_bug\": \"https://github.com/staywoke/api/issues/new\",\n        \"logo\": \"https://cdn.staywoke.org/common/logo.png\",\n        \"icon\": \"https://cdn.staywoke.org/common/icon.png\"\n    }\n}"
						}
					]
				},
				{
					"name": "Unfollow User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEzLCJpYXQiOjE1Nzc5NDc2ODYsImV4cCI6MTU3ODU1MjQ4NiwiaXNzIjoiQVBJIn0.u1AHLFy66E1pJzisJaRhJn2lrQeqAc5zwIwAE1exM20"
							}
						],
						"url": {
							"raw": "http://localhost:5000/v1/user/:username/unfollow",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"v1",
								"user",
								":username",
								"unfollow"
							],
							"variable": [
								{
									"description": "(required, string) - Username of user you wish to follow",
									"key": "username",
									"value": "john_doe"
								}
							]
						},
						"description": "Removes `username` from the current logged in users follow list."
					},
					"response": [
						{
							"name": "Response 400",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEzLCJpYXQiOjE1Nzc5NDc2ODYsImV4cCI6MTU3ODU1MjQ4NiwiaXNzIjoiQVBJIn0.u1AHLFy66E1pJzisJaRhJn2lrQeqAc5zwIwAE1exM20"
									}
								],
								"url": {
									"raw": "http://localhost:5000/v1/user/:username/unfollow",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"v1",
										"user",
										":username",
										"unfollow"
									],
									"variable": [
										{
											"description": "(required, string) - Username of user you wish to follow",
											"key": "username",
											"value": "john_doe"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "API"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Access-Control-Allow-Methods, Authorization, Content-Type, X-Powered-By"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "OPTIONS, GET, POST, PUT, DELETE"
								},
								{
									"key": "X-Rate-Limit-Limit",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Remaining",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Reset",
									"value": "85628612"
								},
								{
									"key": "Content-Length",
									"value": "540"
								},
								{
									"key": "ETag",
									"value": "W/\"21c-rOa+vVUS+2U1i3+oWdeMd8+AvD4\""
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jan 2020 07:37:17 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"notices\": [],\n    \"warnings\": [],\n    \"errors\": [\n        \"You are not following john_doe\"\n    ],\n    \"field_errors\": {},\n    \"meta\": {\n        \"total\": 0,\n        \"showing\": 0,\n        \"pages\": 1,\n        \"page\": 1\n    },\n    \"data\": null,\n    \"attribution\": {\n        \"text\": \"Data Provided by StayWoke\",\n        \"website\": \"https://staywoke.org\",\n        \"link\": \"<a href=\\\"https://staywoke.org\\\">Data Provided by StayWoke</a>\",\n        \"license\": \"https://raw.githubusercontent.com/staywoke/api/master/LICENSE\",\n        \"report_bug\": \"https://github.com/staywoke/api/issues/new\",\n        \"logo\": \"https://cdn.staywoke.org/common/logo.png\",\n        \"icon\": \"https://cdn.staywoke.org/common/icon.png\"\n    }\n}"
						},
						{
							"name": "Response 200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEzLCJpYXQiOjE1Nzc5NDc2ODYsImV4cCI6MTU3ODU1MjQ4NiwiaXNzIjoiQVBJIn0.u1AHLFy66E1pJzisJaRhJn2lrQeqAc5zwIwAE1exM20"
									}
								],
								"url": {
									"raw": "http://localhost:5000/v1/user/:username/unfollow",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"v1",
										"user",
										":username",
										"unfollow"
									],
									"variable": [
										{
											"description": "(required, string) - Username of user you wish to follow",
											"key": "username",
											"value": "john_doe"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "API"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Access-Control-Allow-Methods, Authorization, Content-Type, X-Powered-By"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "OPTIONS, GET, POST, PUT, DELETE"
								},
								{
									"key": "X-Rate-Limit-Limit",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Remaining",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Reset",
									"value": "85676837"
								},
								{
									"key": "Content-Length",
									"value": "669"
								},
								{
									"key": "ETag",
									"value": "W/\"29d-VzRD3Gw/v4LBBQpGMz4k9zcRNfc\""
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jan 2020 07:36:28 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"notices\": [],\n    \"warnings\": [],\n    \"errors\": [],\n    \"field_errors\": {},\n    \"meta\": {\n        \"total\": 1,\n        \"showing\": 1,\n        \"pages\": 1,\n        \"page\": 1\n    },\n    \"data\": {\n        \"created_date\": \"2020-01-02T07:30:58.000Z\",\n        \"deletedAt\": \"2020-01-02T07:36:28.843Z\",\n        \"follow_user_id\": 14,\n        \"id\": 1,\n        \"modified_date\": \"2020-01-02T07:36:28.843Z\",\n        \"user_id\": 13\n    },\n    \"attribution\": {\n        \"text\": \"Data Provided by StayWoke\",\n        \"website\": \"https://staywoke.org\",\n        \"link\": \"<a href=\\\"https://staywoke.org\\\">Data Provided by StayWoke</a>\",\n        \"license\": \"https://raw.githubusercontent.com/staywoke/api/master/LICENSE\",\n        \"report_bug\": \"https://github.com/staywoke/api/issues/new\",\n        \"logo\": \"https://cdn.staywoke.org/common/logo.png\",\n        \"icon\": \"https://cdn.staywoke.org/common/icon.png\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get Followers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEzLCJpYXQiOjE1Nzc5NDc2ODYsImV4cCI6MTU3ODU1MjQ4NiwiaXNzIjoiQVBJIn0.u1AHLFy66E1pJzisJaRhJn2lrQeqAc5zwIwAE1exM20"
							}
						],
						"url": {
							"raw": "http://localhost:5000/v1/user/:username/followers",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"v1",
								"user",
								":username",
								"followers"
							],
							"variable": [
								{
									"description": "(required, string) - Username of user you wish to follow",
									"key": "username",
									"value": "john_doe"
								}
							]
						},
						"description": "Fetches list of users that is following `username`"
					},
					"response": [
						{
							"name": "Response 400",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEzLCJpYXQiOjE1Nzc5NDc2ODYsImV4cCI6MTU3ODU1MjQ4NiwiaXNzIjoiQVBJIn0.u1AHLFy66E1pJzisJaRhJn2lrQeqAc5zwIwAE1exM20"
									}
								],
								"url": {
									"raw": "http://localhost:5000/v1/user/:username/followers",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"v1",
										"user",
										":username",
										"followers"
									],
									"variable": [
										{
											"description": "(required, string) - Username of user you wish to follow",
											"key": "username",
											"value": " "
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "API"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Access-Control-Allow-Methods, Authorization, Content-Type, X-Powered-By"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "OPTIONS, GET, POST, PUT, DELETE"
								},
								{
									"key": "X-Rate-Limit-Limit",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Remaining",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Reset",
									"value": "86398031"
								},
								{
									"key": "Content-Length",
									"value": "526"
								},
								{
									"key": "ETag",
									"value": "W/\"20e-3EAPSUcThQrBMhdP1LcBniHXPCM\""
								},
								{
									"key": "Set-Cookie",
									"value": "connect.sid=s%3Acc985b92-b606-4d06-b6f0-d65a593bac33.xjMDTGfjY0arkHyGbjAyrcD%2B1nHN%2BvWwdAwfvZY4%2F6M; Path=/; HttpOnly"
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jan 2020 07:53:23 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"notices\": [],\n    \"warnings\": [],\n    \"errors\": [\n        \"Missing Username\"\n    ],\n    \"field_errors\": {},\n    \"meta\": {\n        \"total\": 0,\n        \"showing\": 0,\n        \"pages\": 1,\n        \"page\": 1\n    },\n    \"data\": null,\n    \"attribution\": {\n        \"text\": \"Data Provided by StayWoke\",\n        \"website\": \"https://staywoke.org\",\n        \"link\": \"<a href=\\\"https://staywoke.org\\\">Data Provided by StayWoke</a>\",\n        \"license\": \"https://raw.githubusercontent.com/staywoke/api/master/LICENSE\",\n        \"report_bug\": \"https://github.com/staywoke/api/issues/new\",\n        \"logo\": \"https://cdn.staywoke.org/common/logo.png\",\n        \"icon\": \"https://cdn.staywoke.org/common/icon.png\"\n    }\n}"
						},
						{
							"name": "Response 200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEzLCJpYXQiOjE1Nzc5NDc2ODYsImV4cCI6MTU3ODU1MjQ4NiwiaXNzIjoiQVBJIn0.u1AHLFy66E1pJzisJaRhJn2lrQeqAc5zwIwAE1exM20"
									}
								],
								"url": {
									"raw": "http://localhost:5000/v1/user/:username/followers",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"v1",
										"user",
										":username",
										"followers"
									],
									"variable": [
										{
											"description": "(required, string) - Username of user you wish to follow",
											"key": "username",
											"value": "jane_doe"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "API"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Access-Control-Allow-Methods, Authorization, Content-Type, X-Powered-By"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "OPTIONS, GET, POST, PUT, DELETE"
								},
								{
									"key": "X-Rate-Limit-Limit",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Remaining",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Reset",
									"value": "86397641"
								},
								{
									"key": "Content-Length",
									"value": "711"
								},
								{
									"key": "ETag",
									"value": "W/\"2c7-tVQaOJn1q0efY0YTW0RsC4Sk9zM\""
								},
								{
									"key": "Set-Cookie",
									"value": "connect.sid=s%3A5f455651-8ad6-4f64-a384-00b7dcae39d5.DPZQHtMopsJasX%2BQeAiZ%2Bm9o1jHKX88sz3wDfOoSWgU; Path=/; HttpOnly"
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jan 2020 07:49:34 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"notices\": [],\n    \"warnings\": [],\n    \"errors\": [],\n    \"field_errors\": {},\n    \"meta\": {\n        \"total\": 1,\n        \"showing\": 1,\n        \"pages\": 1,\n        \"page\": 1\n    },\n    \"data\": [\n        {\n            \"id\": 3,\n            \"username\": \"john_doe\",\n            \"profile_name\": \"john_doe\",\n            \"profile_photo\": \"https://secure.gravatar.com/avatar/c701e8fbe4b56a80543dbd80c157f853?r=g&s=200&d=identicon\",\n            \"followed_on\": \"2020-01-02T07:44:47.000Z\"\n        }\n    ],\n    \"attribution\": {\n        \"text\": \"Data Provided by StayWoke\",\n        \"website\": \"https://staywoke.org\",\n        \"link\": \"<a href=\\\"https://staywoke.org\\\">Data Provided by StayWoke</a>\",\n        \"license\": \"https://raw.githubusercontent.com/staywoke/api/master/LICENSE\",\n        \"report_bug\": \"https://github.com/staywoke/api/issues/new\",\n        \"logo\": \"https://cdn.staywoke.org/common/logo.png\",\n        \"icon\": \"https://cdn.staywoke.org/common/icon.png\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get Following",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEzLCJpYXQiOjE1Nzc5NDc2ODYsImV4cCI6MTU3ODU1MjQ4NiwiaXNzIjoiQVBJIn0.u1AHLFy66E1pJzisJaRhJn2lrQeqAc5zwIwAE1exM20"
							}
						],
						"url": {
							"raw": "http://localhost:5000/v1/user/:username/following",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"v1",
								"user",
								":username",
								"following"
							],
							"variable": [
								{
									"description": "(required, string) - Username of user you wish to follow",
									"key": "username",
									"value": "jane_doe"
								}
							]
						},
						"description": "Fetches list of users `username` is following"
					},
					"response": [
						{
							"name": "Response 400",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEzLCJpYXQiOjE1Nzc5NDc2ODYsImV4cCI6MTU3ODU1MjQ4NiwiaXNzIjoiQVBJIn0.u1AHLFy66E1pJzisJaRhJn2lrQeqAc5zwIwAE1exM20"
									}
								],
								"url": {
									"raw": "http://localhost:5000/v1/user/:username/following",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"v1",
										"user",
										":username",
										"following"
									],
									"variable": [
										{
											"description": "(required, string) - Username of user you wish to follow",
											"key": "username",
											"value": " "
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "API"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Access-Control-Allow-Methods, Authorization, Content-Type, X-Powered-By"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "OPTIONS, GET, POST, PUT, DELETE"
								},
								{
									"key": "X-Rate-Limit-Limit",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Remaining",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Reset",
									"value": "86293416"
								},
								{
									"key": "Content-Length",
									"value": "526"
								},
								{
									"key": "ETag",
									"value": "W/\"20e-3EAPSUcThQrBMhdP1LcBniHXPCM\""
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jan 2020 07:55:07 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"notices\": [],\n    \"warnings\": [],\n    \"errors\": [\n        \"Missing Username\"\n    ],\n    \"field_errors\": {},\n    \"meta\": {\n        \"total\": 0,\n        \"showing\": 0,\n        \"pages\": 1,\n        \"page\": 1\n    },\n    \"data\": null,\n    \"attribution\": {\n        \"text\": \"Data Provided by StayWoke\",\n        \"website\": \"https://staywoke.org\",\n        \"link\": \"<a href=\\\"https://staywoke.org\\\">Data Provided by StayWoke</a>\",\n        \"license\": \"https://raw.githubusercontent.com/staywoke/api/master/LICENSE\",\n        \"report_bug\": \"https://github.com/staywoke/api/issues/new\",\n        \"logo\": \"https://cdn.staywoke.org/common/logo.png\",\n        \"icon\": \"https://cdn.staywoke.org/common/icon.png\"\n    }\n}"
						},
						{
							"name": "Response 200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEzLCJpYXQiOjE1Nzc5NDc2ODYsImV4cCI6MTU3ODU1MjQ4NiwiaXNzIjoiQVBJIn0.u1AHLFy66E1pJzisJaRhJn2lrQeqAc5zwIwAE1exM20"
									}
								],
								"url": {
									"raw": "http://localhost:5000/v1/user/:username/following",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"v1",
										"user",
										":username",
										"following"
									],
									"variable": [
										{
											"description": "(required, string) - Username of user you wish to follow",
											"key": "username",
											"value": "jane_doe"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "API"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Access-Control-Allow-Methods, Authorization, Content-Type, X-Powered-By"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "OPTIONS, GET, POST, PUT, DELETE"
								},
								{
									"key": "X-Rate-Limit-Limit",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Remaining",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Reset",
									"value": "86312204"
								},
								{
									"key": "Content-Length",
									"value": "711"
								},
								{
									"key": "ETag",
									"value": "W/\"2c7-AspIBNUM27dJ0mdGrNRsKgkAsj4\""
								},
								{
									"key": "Set-Cookie",
									"value": "connect.sid=s%3Aa11c7e98-f3ec-412c-8202-530c4258f1b5.T3QPFHW9j8%2FyQxR%2FKDK9pqzGuG14HulrrRSsqpZfzDA; Path=/; HttpOnly"
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jan 2020 07:54:49 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"notices\": [],\n    \"warnings\": [],\n    \"errors\": [],\n    \"field_errors\": {},\n    \"meta\": {\n        \"total\": 1,\n        \"showing\": 1,\n        \"pages\": 1,\n        \"page\": 1\n    },\n    \"data\": [\n        {\n            \"id\": 2,\n            \"username\": \"john_doe\",\n            \"profile_name\": \"john_doe\",\n            \"profile_photo\": \"https://secure.gravatar.com/avatar/c701e8fbe4b56a80543dbd80c157f853?r=g&s=200&d=identicon\",\n            \"followed_on\": \"2020-01-02T07:43:39.000Z\"\n        }\n    ],\n    \"attribution\": {\n        \"text\": \"Data Provided by StayWoke\",\n        \"website\": \"https://staywoke.org\",\n        \"link\": \"<a href=\\\"https://staywoke.org\\\">Data Provided by StayWoke</a>\",\n        \"license\": \"https://raw.githubusercontent.com/staywoke/api/master/LICENSE\",\n        \"report_bug\": \"https://github.com/staywoke/api/issues/new\",\n        \"logo\": \"https://cdn.staywoke.org/common/logo.png\",\n        \"icon\": \"https://cdn.staywoke.org/common/icon.png\"\n    }\n}"
						}
					]
				},
				{
					"name": "Get Invitations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/v1/user/invite/:key",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"v1",
								"user",
								"invite",
								":key"
							],
							"variable": [
								{
									"key": "key",
									"value": "LJxKVm"
								}
							]
						},
						"description": "Fetches list of users that have registered using the provided invite `key` ( users `hash_id` )."
					},
					"response": [
						{
							"name": "Response 400",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/v1/user/invite/:key",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"v1",
										"user",
										"invite",
										":key"
									],
									"variable": [
										{
											"key": "key",
											"value": "LJxKVc"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "API"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Access-Control-Allow-Methods, Authorization, Content-Type, X-Powered-By"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "OPTIONS, GET, POST, PUT, DELETE"
								},
								{
									"key": "X-Rate-Limit-Limit",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Remaining",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Reset",
									"value": "85745268"
								},
								{
									"key": "Content-Length",
									"value": "533"
								},
								{
									"key": "ETag",
									"value": "W/\"215-Cgpvy94/aIpNGwPcQf95CYz7Y/U\""
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jan 2020 08:04:15 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"notices\": [],\n    \"warnings\": [],\n    \"errors\": [\n        \"Invalid Invitation Code\"\n    ],\n    \"field_errors\": {},\n    \"meta\": {\n        \"total\": 0,\n        \"showing\": 0,\n        \"pages\": 1,\n        \"page\": 1\n    },\n    \"data\": null,\n    \"attribution\": {\n        \"text\": \"Data Provided by StayWoke\",\n        \"website\": \"https://staywoke.org\",\n        \"link\": \"<a href=\\\"https://staywoke.org\\\">Data Provided by StayWoke</a>\",\n        \"license\": \"https://raw.githubusercontent.com/staywoke/api/master/LICENSE\",\n        \"report_bug\": \"https://github.com/staywoke/api/issues/new\",\n        \"logo\": \"https://cdn.staywoke.org/common/logo.png\",\n        \"icon\": \"https://cdn.staywoke.org/common/icon.png\"\n    }\n}"
						},
						{
							"name": "Response 200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/v1/user/invite/:key",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"v1",
										"user",
										"invite",
										":key"
									],
									"variable": [
										{
											"key": "key",
											"value": "LJxKVm"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "API"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Accept, Access-Control-Allow-Methods, Authorization, Content-Type, X-Powered-By"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "OPTIONS, GET, POST, PUT, DELETE"
								},
								{
									"key": "X-Rate-Limit-Limit",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Remaining",
									"value": "Unlimited"
								},
								{
									"key": "X-Rate-Limit-Reset",
									"value": "85951330"
								},
								{
									"key": "Content-Length",
									"value": "506"
								},
								{
									"key": "ETag",
									"value": "W/\"1fa-NXA+Q9C+OMpzGHOZFAG8pp1/7Qg\""
								},
								{
									"key": "Set-Cookie",
									"value": "connect.sid=s%3A584cf031-f410-47d2-bba0-0f17fc7e0995.%2BjNhymC68SxDLtwvSKsC4h%2BfPT1gzCuOi4CmeJFbCVQ; Path=/; HttpOnly"
								},
								{
									"key": "Date",
									"value": "Thu, 02 Jan 2020 08:00:49 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"notices\": [],\n    \"warnings\": [],\n    \"errors\": [],\n    \"field_errors\": {},\n    \"meta\": {\n        \"total\": 0,\n        \"showing\": 0,\n        \"pages\": 1,\n        \"page\": 1\n    },\n    \"data\": [],\n    \"attribution\": {\n        \"text\": \"Data Provided by StayWoke\",\n        \"website\": \"https://staywoke.org\",\n        \"link\": \"<a href=\\\"https://staywoke.org\\\">Data Provided by StayWoke</a>\",\n        \"license\": \"https://raw.githubusercontent.com/staywoke/api/master/LICENSE\",\n        \"report_bug\": \"https://github.com/staywoke/api/issues/new\",\n        \"logo\": \"https://cdn.staywoke.org/common/logo.png\",\n        \"icon\": \"https://cdn.staywoke.org/common/icon.png\"\n    }\n}"
						}
					]
				}
			],
			"description": "The following endpoints are for accessing specific public data about a given username. No private information is accessible from these endpoints.",
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "API-Key",
				"type": "string"
			},
			{
				"key": "value",
				"value": "5A51BE1A-0EDA-1144-2D1C-18E45BF39C38",
				"type": "string"
			}
		]
	},
	"protocolProfileBehavior": {}
}