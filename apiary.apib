FORMAT: 1A
HOST: https://api.staywoke.org/v1

# API

![StayWoke Logo](https://staywoke-github.s3.us-east-1.amazonaws.com/common/logo.png "StayWoke Logo")

StayWoke is a community of learners, builders, and activists to create solutions to advance equity and justice in America.

* _Maintained By:_ __[Peter Schmalfeldt](https://twitter.com/mrmidi)__
* _Last Modified:_ __January 1st, 2020__
* _Current API Version:_ __v1.0.0__

__IMPORTANT:__ Currently, our API is only open for select non-commercial use. You can __[Register for an API Key](https://api.staywoke.org)__ if you would like access to our API. We typically review applications within a business day.

<img src="https://staywoke-github.s3.us-east-1.amazonaws.com/api/apiary.jpg" style="max-width: 100%;">

## Join us on Slack

__[Join us on Slack](https://staywoke.slack.com)__ if you need help using our API, or you are interested in contributing.

[![Slack Team Invite](https://staywoke-github.s3.us-east-1.amazonaws.com/common/slack-invite.png)](https://staywoke.slack.com)


# Group API Basics

## API Overview

Our API has a default Rate Limit by IP Address to `2500` calls per day. We add the following headers so you can monitor your API Rate:

* __X-Rate-Limit-Limit__: The rate limit ceiling for that given request
* __X-Rate-Limit-Remaining__: The number of requests left for the 24 hour window
* __X-Rate-Limit-Reset__: The remaining window before the rate limit resets in UTC [epoch seconds](http://en.wikipedia.org/wiki/Unix_time)

If a specific IP Address exceeds this limit, the API will return a 429 HTTP JSON Response Error.  A sample of this is provided in the Artwork API endpoint.

## API Authentication

Our API requires an API Key to use.  We are not providing API Keys to the general public at this time.  You likely received an API Key before accessing this documentation, if not, please contact the individual who sent you here.

## You can set the API Key one of two ways

#### Request Header:

* __API-Key__ `243CEA2E-7E63-D2C4-3D2D-1A114288274B` _( this is not an actual API Key )_

#### GET Parameter:

* __?apikey=__ `243CEA2E-7E63-D2C4-3D2D-1A114288274B`

### HTTP Request Method Limits

### Common API Responses

The following parameters are available on every API endpoint and used for pagination
for if there are a lot of results.

+ `notices` (array, optional) - An array of API Notices.  These notices are for the API to let the Developer know something that might be helpful, but will not impact the API results.
+ `warnings` (array, optional) - An array of API Warnings.  These warnings explain why the API might have had issues returning results.
+ `errors` (array, optional) - An array of API Errors.  These errors explain why the API prevented returning results.
+ `field_errors` (object, optional) - If the error was in regards to data entry, any errors specific to an input field will return here with the input name and error message.
+ `meta` (object) - The META data object that contains the basic information about the API response.
+ `meta.total` (number) - Total number of all results.  Not just the number returned in the API call.
+ `meta.showing` (number) - Number of results returned in the current API call ( may be less than total results ).
+ `meta.pages` (number) - Number of pages of results.  This is based on the `total` results divided by the `pageSize`.
+ `meta.page` (number) - Current Page
+ `data` (object or array) - This is the the actual data returned for the API call.  For API calls that are expected to return a single result, the `data` will be an Object.  For API calls that are expecting multiple items returned, `data` will be returned as an array ( even if there is only one item returned, such as search results, etc ).
+ `data.staywoke_url` (string) - This will exist for results that have custom pages on the https://staywoke.org website.

__Response 200:__ (application/json)

```
{
    "notices": [],
    "warnings": [],
    "errors": [],
    "field_errors": {},
    "meta": {
        "total": 97,
        "showing": 30,
        "pages": 4,
        "page": 1
    },
    "data": [
        ...
    ]
}
```

__Response 403:__ (application/json)

```
{
    "notices": [],
    "warnings": [],
    "errors": ["Missing API Key"],
    "field_errors": {},
    "meta": {
        "total": 0,
        "showing": 0,
        "pages": 1,
        "page": 1
    },
    "data": []
}
```

### Optional API Params

The following parameters are available on most API endpoint and used for pagination
for if there are a lot of results.

+ `apikey` (string) - Your StayWoke API Key
+ `fields` (string) - Comma Separated List of fields you want in the response.  By default all public fields will be returned, but if you only need specific fields you can greatly simplify your API response by specifying them.
+ `pageSize` (number, optional) - How many results to return in a single API call. Defaults to 30
+ `page` (number, optional) - If there is more than one page of results, you can set which page to load here
+ `sort` (optional, string, `population_rank`) - Comma Separated List of fields you want to sort by
+ `order` (optional, string, `asc`) - Comma Separated List of Order Methods
+ `pretty` (optional) - If you want to format the JSON response to be human readable, just add a `pretty` param in the API call ( it does not need a value )

### Request Authorization Header

* __Authorization:__ Bearer `token`

An example API Header would look like this:

```
curl --data '' https://api.staywoke.org/v1/user/refresh/ -H "Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VySWQiOiIyIiwiaWF0IjoxNDUxNzEyNzg0LCJleHAiOjE0NTIzMTc1ODQsImlzcyI6IkRvaW5nIEFQSSJ9.x3eJutiulLnJCJkl_jP9ETj43ihePVeMtaWgWF0I60w"
```



# Group API Access

All access to our API will require an Authentication Token. The following endpoint will
get your access to endpoints that do not require user authentication.

## Token [/token]

You will not be able to make a request to our API without a `token` sent in an
Authorization Header.  This `/token` endpoint is the only public endpoint open to
allow a `token` to be requested.  This endpoint is only required for anonymous users
that have not logged in.  Once the user logs in, you will need to use the `token` that
is sent back for that user, as it will be used for authenticating that specific user.

Once a user has logged in, you will need to send over their Authentication
Token in the HTTP Header.  A `token` is returned with a successful login.  A session
token is valid for 7 days.  You can refresh your token to prevent having to log in
again by either adding the Request Authorization Header below, or using the
`/api/0.1/user/refresh/` endpoint.

### Get Token [GET]

+ Response 200 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [],
            "field_errors": {},
            "meta": {
                "total": 1,
                "showing": 1,
                "pages": 1,
                "page": 1
            },
            "data": {
                "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE1Nzc5MjY2ODUsImV4cCI6MTU3ODUzMTQ4NSwiaXNzIjoiQVBJIn0.tC2KwBJyBDmyOuYCQjrmOYx0-KPPFKE6qC8sO3h09Sw"
            },
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

## Refresh Session [/user/refresh]

A `token` is returned with a successful login.  A session token is valid for 7 days.
You can refresh your token to prevent having to log in again by either adding the
Request Authorization Header below. `token` should be the string returned in the
`token` parameter from a successful login.

* __Authorization:__ Bearer `token`

### Refresh Session [POST]

+ Response 200 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [],
            "field_errors": {},
            "meta": {
                "total": 0,
                "showing": 0,
                "pages": 1,
                "page": 1
            },
            "data": {
                "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VySWQiOjIsImlhdCI6MTQ1MTc5ODYyMSwiZXhwIjoxNDUyNDAzNDIxLCJpc3MiOiJEb2luZyBBUEkifQ.za4PspEZfeVxydO3QHSFBLm_9PcrCBRwK9HLofBY74s"
            },
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

+ Response 400 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [
                "Invalid or expired token"
            ],
            "field_errors": {},
            "meta": {
                "total": 0,
                "showing": 0,
                "pages": 1,
                "page": 1
            },
            "data": null,
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }




# Group Account Management

The following endpoints are specifically setup to manage the logged in users account.

## Register [/user/register/?username={username}&password={password}&retype_password={retype_password}&inviteCode={inviteCode}&first_name={first_name}&last_name={last_name}&email={email}&agree={agree}]

API Endpoint to register new users. This should set the user's `activated` field
to `true` unless they've included their email address. If so, `activated` is
`false` and the user will be sent an email with a `new_email_key` key to confirm
their email address to complete registration.

+ Parameters
    + username (string, required) - The username or email address of the account
        + Min Length: __3__
        + Max Length: __30__
        + Characters Allowed: __a-zA-Z0-9___
        + Case Insensitive
    + password (string, required) - The password to the account
        + Min Length: __6__
        + No Other Password Requirements :)
    + retype_password (string, required) - The password to the account
        + Min Length: __6__
        + No Other Password Requirements :)
    + inviteCode (string, required) - During Alpha / Beta testing, an Invitation Code is Required for registration
        + Length: __6__
        + Existing Users: __hash_id__
    + first_name (string, optional) - First Name - NOTE: Apple does not like requiring personal info for registration
        + Min Length: __1__
        + Max Length: __50__
    + last_name (string, optional) - Last Name - NOTE: Apple does not like requiring personal info for registration
        + Min Length: __1__
        + Max Length: __50__
    + email (string, optional) - Email Address - NOTE: Apple does not like requiring personal info for registration
        + Min Length: __1__
        + Max Length: __100__
    + agree (string, required) - Agree to TOS - User Agreed to Terms of Service

### User Register [POST]

+ Response 200 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [],
            "field_errors": {},
            "meta": {
                "total": 1,
                "showing": 1,
                "pages": 1,
                "page": 1
            },
            "data": {
                "activated": false,
                "banned": false,
                "created_date": "2020-01-02T01:11:05.008Z",
                "email": "john.doe@fake.com",
                "first_name": "John",
                "hash_id": "WJvqzv",
                "id": 3,
                "last_name": "Doe",
                "modified_date": "2020-01-02T01:11:05.008Z",
                "profile_name": "john_doe",
                "username": "john_doe"
            },
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

+ Response 400 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [],
            "field_errors": {
                "username": [
                    "Username is already in use"
                ],
                "email": [
                    "Email is already in use"
                ]
            },
            "meta": {
                "total": 0,
                "showing": 0,
                "pages": 1,
                "page": 1
            },
            "data": null,
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

## Confirm Account [/user/confirm/account/?key={key}]

During account registration, new users will be sent a link to confirm their
email address.  The users account will be disabled until the user confirms the email
address.


+ Parameters
    + key (required, string) - The `new_email_key` stored for the user

### Confirm Account [GET]

+ Response 200 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [],
            "field_errors": {},
            "meta": {
                "total": 1,
                "showing": 1,
                "pages": 1,
                "page": 1
            },
            "data": {
                "activated": true,
                "banned": false,
                "banned_reason": null,
                "bio": null,
                "company_name": null,
                "created_date": "2020-01-02T02:10:23.000Z",
                "deletedAt": null,
                "email": "jane.doe@fake.com",
                "first_name": "Jane",
                "hash_id": "LYvlRm",
                "id": 2,
                "last_name": "Doe",
                "location": null,
                "modified_date": "2020-01-02T02:15:20.457Z",
                "new_password_key": null,
                "profile_link_1": null,
                "profile_link_2": null,
                "profile_link_3": null,
                "profile_link_twitter": null,
                "profile_link_website": null,
                "profile_name": "jane_doe",
                "profile_photo": null,
                "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU3NzkzMTMyMCwiZXhwIjoxNTc4NTM2MTIwLCJpc3MiOiJBUEkifQ.GjxhhS7WLZcNrbnbULPZ1RiFUF_1ctMNZMxSx3k4Mkk",
                "username": "jane_doe"
            },
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

+ Response 400 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [
                "Activation Key not found"
            ],
            "field_errors": {},
            "meta": {
                "total": 0,
                "showing": 0,
                "pages": 1,
                "page": 1
            },
            "data": null,
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

## Confirm Email Change [/user/confirm/email/?key={key}]

When a user changes their email, they will be sent a confirmation email to both
their new and old email address assuring it was them that requested the email
change.


+ Parameters
    + key (required, string) - The `new_email_key` stored for the user

### Confirm Email Change [GET]

+ Response 200 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [],
            "field_errors": {},
            "meta": {
                "total": 1,
                "showing": 1,
                "pages": 1,
                "page": 1
            },
            "data": {
                "activated": true,
                "banned": false,
                "banned_reason": null,
                "bio": null,
                "company_name": null,
                "created_date": "2020-01-02T02:10:23.000Z",
                "deletedAt": null,
                "email": "jane.doe2@fake.com",
                "first_name": "Jane",
                "hash_id": "LYvlRm",
                "id": 2,
                "last_name": "Doe",
                "location": null,
                "modified_date": "2020-01-02T02:26:45.454Z",
                "new_password_key": null,
                "profile_link_1": null,
                "profile_link_2": null,
                "profile_link_3": null,
                "profile_link_twitter": null,
                "profile_link_website": null,
                "profile_name": "jane_doe",
                "profile_photo": null,
                "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU3NzkzMjAwNSwiZXhwIjoxNTc4NTM2ODA1LCJpc3MiOiJBUEkifQ.G0c_x6pt1djFAFyr9SY-3Q295NsMVgQu95hDSkc4h7s",
                "username": "jane_doe"
            },
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

+ Response 400 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [
                "Confirmation Key not found"
            ],
            "field_errors": {},
            "meta": {
                "total": 0,
                "showing": 0,
                "pages": 1,
                "page": 1
            },
            "data": null,
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

## Confirm Password Change [/user/confirm/password/?key={key}]

When a user changes their password, they will be sent a confirmation email assuring
it was them that requested the password change.


+ Parameters
    + key (required, string) - The `new_password_key` stored for the user

### Confirm Password Change [GET]

+ Response 200 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [],
            "field_errors": {},
            "meta": {
                "total": 1,
                "showing": 1,
                "pages": 1,
                "page": 1
            },
            "data": {
                "activated": true,
                "banned": false,
                "banned_reason": null,
                "bio": null,
                "company_name": null,
                "created_date": "2020-01-02T02:10:23.000Z",
                "deletedAt": null,
                "email": "jane.doe@fake.com",
                "first_name": "Jane",
                "hash_id": "LYvlRm",
                "id": 2,
                "last_name": "Doe",
                "location": null,
                "modified_date": "2020-01-02T02:32:13.794Z",
                "new_password_key": null,
                "profile_link_1": null,
                "profile_link_2": null,
                "profile_link_3": null,
                "profile_link_twitter": null,
                "profile_link_website": null,
                "profile_name": "jane_doe",
                "profile_photo": null,
                "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU3NzkzMjMzMywiZXhwIjoxNTc4NTM3MTMzLCJpc3MiOiJBUEkifQ.s_ykYP-rQuJJH41y7lZODWAc2RIamZGYw_GGPhwElD4",
                "username": "jane_doe"
            },
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

+ Response 400 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [
                "Confirmation Key not found"
            ],
            "field_errors": {},
            "meta": {
                "total": 0,
                "showing": 0,
                "pages": 1,
                "page": 1
            },
            "data": null,
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

## Login [/user/login/?username={username}&password={password}]

Some of the API endpoints will require authentication. Those endpoints will
require the `token` returned from a successful login.

To access authentication-protected endpoints, you will need to include an
`Authorization` HTTP header in the format: `Bearer (token)`.

+ Parameters
    + username (string, required) - The username of the account
    + password (string, required) - The password to the account

### User Login [POST]

+ Response 200 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [],
            "field_errors": {},
            "meta": {
                "total": 1,
                "showing": 1,
                "pages": 1,
                "page": 1
            },
            "data": {
                "activated": true,
                "banned": false,
                "banned_reason": null,
                "bio": null,
                "company_name": null,
                "created_date": "2020-01-02T02:10:23.000Z",
                "deletedAt": null,
                "email": "jane.doe@fake.com",
                "first_name": "Jane",
                "hash_id": "LYvlRm",
                "id": 2,
                "last_name": "Doe",
                "location": null,
                "modified_date": "2020-01-02T02:32:13.000Z",
                "new_password_key": null,
                "profile_link_1": null,
                "profile_link_2": null,
                "profile_link_3": null,
                "profile_link_twitter": null,
                "profile_link_website": null,
                "profile_name": "jane_doe",
                "profile_photo": null,
                "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIsImlhdCI6MTU3NzkzNDA3MiwiZXhwIjoxNTc4NTM4ODcyLCJpc3MiOiJBUEkifQ.sHfJ-iFk1TZYPbO4MBneuFvyKu6PwkALSU-QcyvZLGc",
                "username": "jane_doe"
            },
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

+ Response 401 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [
                "Incorrect Password"
            ],
            "field_errors": {},
            "meta": {
                "total": 0,
                "showing": 0,
                "pages": 1,
                "page": 1
            },
            "data": null,
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }


## Logout [/user/logout]

Tell API that the user has logged out. This will only register if a Bearer Authentication Token is set in the Header.

### User Logout [POST]

+ Response 200 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [],
            "field_errors": {},
            "meta": {
                "total": 1,
                "showing": 1,
                "pages": 1,
                "page": 1
            },
            "data": {
                "success": true
            },
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

+ Response 403 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [
                "Invalid API Authorization Token"
            ],
            "field_errors": {},
            "meta": {
                "total": 0,
                "showing": 0,
                "pages": 1,
                "page": 1
            },
            "data": null,
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

## Forgot Password [/user/forgot-password/?email={email}]

Forgot password will require an email address that is requesting for the password
reset link.

+ Parameters
    + email (required, string) - The email address of the account

### User Forgot Password [POST]

+ Response 200 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [],
            "field_errors": {},
            "meta": {
                "total": 1,
                "showing": 1,
                "pages": 1,
                "page": 1
            },
            "data": {
                "activated": true,
                "banned": false,
                "banned_reason": null,
                "bio": null,
                "company_name": null,
                "created_date": "2020-01-02T02:10:23.000Z",
                "deletedAt": null,
                "email": "jane.doe@fake.com",
                "first_name": "Jane",
                "hash_id": "LYvlRm",
                "id": 2,
                "last_name": "Doe",
                "location": null,
                "modified_date": "2020-01-02T03:15:33.321Z",
                "new_password_key": "RBiNnDqOJUaX",
                "profile_link_1": null,
                "profile_link_2": null,
                "profile_link_3": null,
                "profile_link_twitter": null,
                "profile_link_website": null,
                "profile_name": "jane_doe",
                "profile_photo": null,
                "username": "jane_doe"
            },
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

+ Response 400 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [
                "No Matching Email Found"
            ],
            "field_errors": {},
            "meta": {
                "total": 0,
                "showing": 0,
                "pages": 1,
                "page": 1
            },
            "data": null,
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

## Reset Password [/user/reset-password/?token={token}&password={password}&retype_password={retype_password}]

Reset password will check the token against the `new_password_key` column for that user.  We will also likely want to make sure that `new_password_requested` is less than a certain age to prevent open password change requests.

+ Parameters
    + token (required, string) - This is the `new_password_key` token that is sent from the link in the email address.
    + password (required, string) - This is the new password that the user wants to reset
    + retype_password (required, string) - This should be the same as 'password' and is the confirmation of the password

### User Reset Password [POST]

+ Response 200 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [],
            "field_errors": {},
            "meta": {
                "total": 1,
                "showing": 1,
                "pages": 1,
                "page": 1
            },
            "data": {
                "activated": true,
                "banned": false,
                "banned_reason": null,
                "bio": null,
                "company_name": null,
                "created_date": "2020-01-02T02:10:23.000Z",
                "deletedAt": null,
                "email": "jane.doe@fake.com",
                "first_name": "Jane",
                "hash_id": "LYvlRm",
                "id": 2,
                "last_name": "Doe",
                "location": null,
                "modified_date": "2020-01-02T03:52:48.714Z",
                "new_password_key": null,
                "profile_link_1": null,
                "profile_link_2": null,
                "profile_link_3": null,
                "profile_link_twitter": null,
                "profile_link_website": null,
                "profile_name": "jane_doe",
                "profile_photo": null,
                "username": "jane_doe"
            },
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

+ Response 400 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [
                "Request Invalid or Expired"
            ],
            "field_errors": {},
            "meta": {
                "total": 0,
                "showing": 0,
                "pages": 1,
                "page": 1
            },
            "data": null,
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

## Resend Email Confirmation [/user/resend-confirmation/{hash_id}]

If the user needs to resend their email confirmation, this is the endpoint to use.

+ Parameters
    + hash_id (required, string) - This is the hash id of the user

### Resend Email Confirmation [GET]

+ Response 200 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [],
            "field_errors": {},
            "meta": {
                "total": 1,
                "showing": 1,
                "pages": 1,
                "page": 1
            },
            "data": "Confirmation Email Resent",
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

+ Response 400 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [
                "Invalid Request"
            ],
            "field_errors": {},
            "meta": {
                "total": 0,
                "showing": 0,
                "pages": 1,
                "page": 1
            },
            "data": null,
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

## Update Account [/user/update/?username={username}&password={password}&new_username={new_username}&new_email={new_email}&password_new={password_new}&password_new_retype={password_new_retype}]

This endpoint will allow the logged in user to update their own account.  This uses the current Authentication Bearer Token to lookup who's account to update.

The Bearer Token is created during login and contains the users ID from our database.  You will not be able to use this endpoint to manage anyone elses account except your own.

IMPORTANT NOTES ABOUT THIS ENDPOINT:

1. Changing the username will immediatley make the old username available to the world for use.  We do check to make sure that the new username being requested is available.
2. We do not immediatley change the email when requested.  Instead we send a confirmation email to both the new and old email to confirm the requested change.
3. We do not immediatley change the password when requested.  We first send a confirmation email to the users current email to confirm that they made the requested change.

+ Parameters
    + username (required, string) - Current Account Username ( required to make any changes on this endpoint )
    + password (required, string) - Current Account Passsword ( required to make any changes on this endpoint )
    + new_username (optional, string) - New Username user wishes to change their username to
    + new_email (optional, string) - New Email Address user wishes to associate with their account
    + password_new (optional, string) - New Password user wishes to use for their account
    + password_new_retype (optional, string) - Repeat the new password to make sure they match so they don't get locked out

### Update Account [POST]

+ Response 200 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [],
            "field_errors": {},
            "meta": {
                "total": 1,
                "showing": 1,
                "pages": 1,
                "page": 1
            },
            "data": {
                "messages": [
                    "Your username has been updated to \"jane_ray\". A confirmation of this change has been sent to your email address."
                ],
                "title": "Account Updated",
                "user": {
                    "id": 2,
                    "activated": true,
                    "username": "jane_ray",
                    "password": "$2b$08$iIW30arfYVRi28u6sUIkU.ZOHddmtzLRRVBgjaEyZR3Cr34wTfCBK",
                    "email": "jane.doe@fake.com",
                    "first_name": "Jane",
                    "last_name": "Doe",
                    "company_name": null,
                    "profile_name": "jane_doe",
                    "profile_photo": null,
                    "location": null,
                    "profile_link_website": null,
                    "profile_link_twitter": null,
                    "profile_link_1": null,
                    "profile_link_2": null,
                    "profile_link_3": null,
                    "bio": null,
                    "banned": false,
                    "banned_reason": null,
                    "new_password": null,
                    "new_password_key": null,
                    "new_password_requested": null,
                    "new_email": null,
                    "new_email_key": null,
                    "new_email_requested": null,
                    "created_date": "2020-01-02T02:10:23.000Z",
                    "modified_date": "2020-01-02T05:34:14.102Z",
                    "deletedAt": null
                }
            },
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

+ Response 400 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [
                "Incorrect Username"
            ],
            "field_errors": {},
            "meta": {
                "total": 0,
                "showing": 0,
                "pages": 1,
                "page": 1
            },
            "data": null,
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

## Delete Account [/user/delete/?username={username}&password={password}]

This endpoint only works for the currently logged in user using the Authorization
Bearer Header Token.  Once that is verified there is a second check to require the
account holders username and password to double check that they just did not steal
the Authentication Header to try to steal / delete the users account.

IMPORTANT NOTES ABOUT THIS ENDPOINT:

1. This will permanently delete the users account
2. This will also permanently delete all data generated by the user
3. There is no way to undo this

+ Parameters
    + username (required, string) - Current Account User
    + password (required, string) - Current Account Password

### Delete Account [DELETE]

+ Response 200 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [],
            "field_errors": {},
            "meta": {
                "total": 1,
                "showing": 1,
                "pages": 1,
                "page": 1
            },
            "data": {
                "activated": true,
                "banned": false,
                "banned_reason": null,
                "bio": null,
                "company_name": null,
                "created_date": "2020-01-02T02:10:23.000Z",
                "deletedAt": null,
                "email": "jane.doe@fake.com",
                "first_name": "Jane",
                "hash_id": "LYvlRm",
                "id": 2,
                "last_name": "Doe",
                "location": null,
                "modified_date": "2020-01-02T05:34:14.000Z",
                "new_password_key": null,
                "profile_link_1": null,
                "profile_link_2": null,
                "profile_link_3": null,
                "profile_link_twitter": null,
                "profile_link_website": null,
                "profile_name": "jane_doe",
                "profile_photo": null,
                "username": "jane_ray"
            },
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

+ Response 400 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [
                "Incorrect Username"
            ],
            "field_errors": {},
            "meta": {
                "total": 0,
                "showing": 0,
                "pages": 1,
                "page": 1
            },
            "data": null,
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }


# Group User Interaction

The following endpoints are for accessing specific public data about a given
username.  No private information is accessible from these endpoints.

## Get User Profile [/user/{username}/profile]

Get a public profile for given `username`.

+ Parameters
    + username (required, string) - Username for requested profile

### Get User Profile [GET]

+ Response 200 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [],
            "field_errors": {},
            "meta": {
                "total": 1,
                "showing": 1,
                "pages": 1,
                "page": 1
            },
            "data": {
                "bio": null,
                "company_name": null,
                "email": "jane.doe@fake.com",
                "first_name": "Jane",
                "last_name": "Doe",
                "location": null,
                "profile_link_1": null,
                "profile_link_2": null,
                "profile_link_3": null,
                "profile_link_twitter": null,
                "profile_link_website": null,
                "profile_name": "jane_doe",
                "profile_photo": null,
                "username": "jane_doe"
            },
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

+ Response 400 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [
                "No Matching Username"
            ],
            "field_errors": {},
            "meta": {
                "total": 0,
                "showing": 0,
                "pages": 1,
                "page": 1
            },
            "data": [],
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

## Follow User [/user/{username}/follow]

Add's `username` to the current logged in users follow list.

+ Parameters
    + username (required, string) - Username of user you wish to follow

### Follow User [POST]

+ Response 200 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [],
            "field_errors": {},
            "meta": {
                "total": 1,
                "showing": 1,
                "pages": 1,
                "page": 1
            },
            "data": {
                "created_date": "2020-01-02T07:30:58.951Z",
                "follow_user_id": 14,
                "id": 1,
                "modified_date": "2020-01-02T07:30:58.951Z",
                "user_id": 13
            },
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

+ Response 400 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [
                "No user found for user johnd_doe"
            ],
            "field_errors": {},
            "meta": {
                "total": 0,
                "showing": 0,
                "pages": 1,
                "page": 1
            },
            "data": null,
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

## Unfollow User [/user/{username}/unfollow]

Removes `username` from the current logged in users follow list.

+ Parameters
    + username (required, string) - Username of user you wish to unfollow

### Unfollow User [POST]

+ Response 200 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [],
            "field_errors": {},
            "meta": {
                "total": 1,
                "showing": 1,
                "pages": 1,
                "page": 1
            },
            "data": {
                "created_date": "2020-01-02T07:30:58.000Z",
                "deletedAt": "2020-01-02T07:34:27.538Z",
                "follow_user_id": 14,
                "id": 1,
                "modified_date": "2020-01-02T07:34:27.539Z",
                "user_id": 13
            },
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

+ Response 400 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [
                "You are not following john_doe"
            ],
            "field_errors": {},
            "meta": {
                "total": 0,
                "showing": 0,
                "pages": 1,
                "page": 1
            },
            "data": null,
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

## Get Followers [/user/{username}/followers]

Fetches list of users that is following `username`

+ Parameters
    + username (required, string) - Username to get followers list for

### Get Followers [GET]

+ Response 200 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [],
            "field_errors": {},
            "meta": {
                "total": 1,
                "showing": 1,
                "pages": 1,
                "page": 1
            },
            "data": [
                {
                    "id": 3,
                    "username": "john_doe",
                    "profile_name": "john_doe",
                    "profile_photo": "https://secure.gravatar.com/avatar/c701e8fbe4b56a80543dbd80c157f853?r=g&s=200&d=identicon",
                    "followed_on": "2020-01-02T07:44:47.000Z"
                }
            ],
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

+ Response 400 (application/json)

        {
          "error": true,
          "errors": [
            "Missing Username"
          ],
          "field_errors": {},
          "meta": {
            "total": 0,
            "showing": 0,
            "pages": 1,
            "page": 1
          },
          "data": []
        }

## Get Following [/user/{username}/following]

Fetches list of users `username` is following

+ Parameters
    + username (required, string) - Username to get following list for

### Get Following [GET]

+ Response 200 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [],
            "field_errors": {},
            "meta": {
                "total": 1,
                "showing": 1,
                "pages": 1,
                "page": 1
            },
            "data": [
                {
                    "id": 2,
                    "username": "john_doe",
                    "profile_name": "john_doe",
                    "profile_photo": "https://secure.gravatar.com/avatar/c701e8fbe4b56a80543dbd80c157f853?r=g&s=200&d=identicon",
                    "followed_on": "2020-01-02T07:43:39.000Z"
                }
            ],
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

+ Response 400 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [
                "Missing Username"
            ],
            "field_errors": {},
            "meta": {
                "total": 0,
                "showing": 0,
                "pages": 1,
                "page": 1
            },
            "data": null,
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

## Get Invitations [/user/invite/{key}]

Fetches list of users that have registered using the provided invite `key` ( users `hash_id` ).

+ Parameters
    + key (required, string) - Invitation Key ( users hash_id )

### Get Invitations [GET]

+ Response 200 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [],
            "field_errors": {},
            "meta": {
                "total": 0,
                "showing": 0,
                "pages": 1,
                "page": 1
            },
            "data": [
                {
                    "id": 2,
                    "username": "manifestinteractive",
                    "profile_name": "Peter Schmalfeldt",
                    "profile_photo": "https://peterschmalfeldt.com/images/me.jpg",
                    "followed_on": "2016-03-05T08:30:04.000Z"
                }
            ],
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

+ Response 400 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [
                "Invalid Invitation Code"
            ],
            "field_errors": {},
            "meta": {
                "total": 0,
                "showing": 0,
                "pages": 1,
                "page": 1
            },
            "data": null,
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }


# Group User Settings

The following endpoints for accessing & managing settings for the current logged
in user.  These endpoints only work for the user associated with the Authorization
Bearer Token sent in the header.  This uses the current Authentication Bearer Token
to lookup who's account to update. The Bearer Token is created during login and contains
the users ID from our database.  You will not be able to use this endpoint to manage
anyone elses account except your own.

## Get User Settings [/settings]

Gets account settings for current logged in user

### Get User Settings [GET]

+ Response 200 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [],
            "field_errors": {},
            "meta": {
                "total": 1,
                "showing": 1,
                "pages": 1,
                "page": 1
            },
            "data": {
                "notifications": {
                    "email_comment_left": true,
                    "email_comment_liked": false,
                    "email_mentioned_in_comment": true,
                    "email_someone_follows": true,
                    "newsletter": true,
                    "web_comment_left": true,
                    "web_comment_liked": false,
                    "web_mentioned_in_comment": true,
                    "web_someone_follows": true
                }
            },
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

+ Response 400 (application/json)



## Update Profile [/settings/profile/?profile_photo={profile_photo}&profile_name={profile_name}&location={location}&company_name={company_name}&first_name={first_name}&last_name={last_name}&bio={bio}]

This endpoint will allow the logged in user to update their own account profile.

+ Parameters
    + profile_photo (optional, string) - absolute path to location of User Avatar ( must be HTTPS to prevent issues )
        + Max Length: `255`
        + Default: null
    + profile_name (optional, string) - Public Display Name of User
        + Max Length: `100`
        + Default: Users Username
    + location (optional, string) - Public Pysical Location of User
        + Max Length: `50`
        + Default: null
    + company_name (optional, string) - Public Company the User works for
        + Max Length: `100`
        + Default: null
    + first_name (optional, string) - Private First Name ( never shown on site - for internal use only )
        + Max Length: `100`
        + Default: null
    + last_name (optional, string) - Private Last Name ( never shown on site - for internal use only )
        + Max Length: `100`
        + Default: null
    + bio (optional, string) - Public User Bio to display on website
        + Max Length: `255`
        + Default: null

### Update Profile [POST]

+ Response 200 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [],
            "field_errors": {},
            "meta": {
                "total": 1,
                "showing": 1,
                "pages": 1,
                "page": 1
            },
            "data": {
                "activated": true,
                "banned": false,
                "banned_reason": null,
                "bio": "I make things on the internet.",
                "company_name": "StayWoke",
                "created_date": "2020-01-02T07:42:43.000Z",
                "deletedAt": null,
                "email": "jane.doe@fake.com",
                "first_name": "Jane",
                "hash_id": "bJvJPv",
                "id": 15,
                "last_name": "Doe",
                "location": "St. Petersburg, FL",
                "modified_date": "2020-01-04T01:22:56.000Z",
                "new_password_key": null,
                "profile_link_1": null,
                "profile_link_2": null,
                "profile_link_3": null,
                "profile_link_twitter": null,
                "profile_link_website": null,
                "profile_name": "Jane Doe",
                "profile_photo": "https://gravatar.com/avatar/a9601f3839e5d5da764c1861a5e1daf6?s=200",
                "username": "jane_doe"
            },
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

+ Response 400 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [
                "No user found with ID Error: Missing Header Token"
            ],
            "field_errors": {},
            "meta": {
                "total": 0,
                "showing": 0,
                "pages": 1,
                "page": 1
            },
            "data": null,
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

## Update Social Links [/settings/social-links/?profile_link_github={profile_link_github}&profile_link_bitbucket={profile_link_bitbucket}&profile_link_twitter={profile_link_twitter}&profile_link_1={profile_link_1}&profile_link_2={profile_link_2}&profile_link_3={profile_link_3}]

This endpoint will allow the logged in user to update their own accounts Social Links.

+ Parameters
    + profile_link_github (optional, string) - Absolute URL to Github Profile Page
        + Max Length: `100`
        + Default: null
    + profile_link_bitbucket (optional, string) - Absolute URL to Bitbucket Profile Page
        + Max Length: `100`
        + Default: null
    + profile_link_twitter (optional, string) - Absolute URL to Twitter Profile Page
        + Max Length: `100`
        + Default: null
    + profile_link_1 (optional, string) - Absolute URL to a URL of the Users Choosing
        + Max Length: `100`
        + Default: null
    + profile_link_2 (optional, string) - Absolute URL to a URL of the Users Choosing
        + Max Length: `100`
        + Default: null
    + profile_link_3 (optional, string) - Absolute URL to a URL of the Users Choosing
        + Max Length: `100`
        + Default: null

### Update Social Links [POST]

+ Response 200 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [],
            "field_errors": {},
            "meta": {
                "total": 1,
                "showing": 1,
                "pages": 1,
                "page": 1
            },
            "data": {
                "activated": true,
                "banned": false,
                "banned_reason": null,
                "bio": "I make things on the internet.",
                "company_name": "StayWoke",
                "created_date": "2020-01-02T07:42:43.000Z",
                "deletedAt": null,
                "email": "jane.doe@fake.com",
                "first_name": "Jane",
                "hash_id": "bJvJPv",
                "id": 15,
                "last_name": "Doe",
                "location": "St. Petersburg, FL",
                "modified_date": "2020-01-04T01:36:25.313Z",
                "new_password_key": null,
                "profile_link_1": "https://staywoke.org",
                "profile_link_2": "",
                "profile_link_3": "",
                "profile_link_twitter": "https://twitter.com/staywoke",
                "profile_name": "Jane Doe",
                "profile_photo": "https://gravatar.com/avatar/a9601f3839e5d5da764c1861a5e1daf6?s=200",
                "username": "jane_doe"
            },
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

+ Response 400 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [
                "No user found with ID Error: Missing Header Token"
            ],
            "field_errors": {},
            "meta": {
                "total": 0,
                "showing": 0,
                "pages": 1,
                "page": 1
            },
            "data": null,
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

## Update Email Notifications [/settings/email-notifications/?email_comment_left={email_comment_left}&email_comment_liked={email_comment_liked}&email_project_liked={email_project_liked}&email_someone_follows={email_someone_follows}&email_mentioned_in_comment={email_mentioned_in_comment}]

This endpoint will allow the logged in user to update their own accounts email notification settings.

+ Parameters
    + email_comment_left (boolean, optional) - Send Email when Comment Left
        + Default: true
    + email_comment_liked (boolean, optional) - Send Email when Comment Liked
        + Default: true
    + email_project_liked (boolean, optional) - Send Email when Project Liked
        + Default: true
    + email_someone_follows (boolean, optional) - Send Email when Someone Follows
        + Default: true
    + email_mentioned_in_comment (boolean, optional) - Send Email when Mentioned in Comment
        + Default: true

### Update Email Notifications [POST]

+ Response 200 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [],
            "field_errors": {},
            "meta": {
                "total": 1,
                "showing": 1,
                "pages": 1,
                "page": 1
            },
            "data": {
                "created_date": "2020-01-04T01:42:50.622Z",
                "email_comment_left": true,
                "email_comment_liked": false,
                "email_mentioned_in_comment": true,
                "email_someone_follows": true,
                "id": 2,
                "modified_date": "2020-01-04T01:42:50.622Z",
                "newsletter": true,
                "user_id": 15,
                "web_comment_left": true,
                "web_comment_liked": true,
                "web_mentioned_in_comment": true,
                "web_someone_follows": true
            },
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

+ Response 400 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [
                "Unable to set email notifications"
            ],
            "field_errors": {},
            "meta": {
                "total": 0,
                "showing": 0,
                "pages": 1,
                "page": 1
            },
            "data": null,
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

## Update Web Notifications [/settings/web-notifications/?web_comment_left={web_comment_left}&web_comment_liked={web_comment_liked}&web_project_liked={web_project_liked}&web_someone_follows={web_someone_follows}&web_mentioned_in_comment={web_mentioned_in_comment}]

This endpoint will allow the logged in user to update their own accounts web notification settings.

+ Parameters
    + web_comment_left (boolean, optional) - Send Web / Push Notification when Comment Left
        + Default: true
    + web_comment_liked (boolean, optional) - Send Web / Push Notification when Comment Liked
        + Default: true
    + web_project_liked (boolean, optional) - Send Web / Push Notification when Project Liked
        + Default: true
    + web_someone_follows (boolean, optional) - Send Web / Push Notification when Someone Follows
        + Default: true
    + web_mentioned_in_comment (boolean, optional) - Send Web / Push Notification when Mentioned in Comment
        + Default: true

### Update Web Notifications [POST]

+ Response 200 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [],
            "field_errors": {},
            "meta": {
                "total": 1,
                "showing": 1,
                "pages": 1,
                "page": 1
            },
            "data": {
                "created_date": "2020-01-04T01:42:50.000Z",
                "deletedAt": null,
                "email_comment_left": true,
                "email_comment_liked": false,
                "email_mentioned_in_comment": true,
                "email_someone_follows": true,
                "id": 2,
                "modified_date": "2020-01-04T01:48:25.884Z",
                "newsletter": true,
                "user_id": 15,
                "web_comment_left": true,
                "web_comment_liked": false,
                "web_mentioned_in_comment": true,
                "web_someone_follows": true
            },
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

+ Response 400 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [
                "Unable to set web notifications"
            ],
            "field_errors": {},
            "meta": {
                "total": 0,
                "showing": 0,
                "pages": 1,
                "page": 1
            },
            "data": null,
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }


# Group META Data

The following endpoints for accessing META Data used across the API, such as Categories
and Tags. Helpful for generating select lists to connect more meaningful data atributes
to other API models.

## Categories [/categories/{slug}]

Fetch a list of all categories.  Optionally, you can pass over a `slug` for a category to get a list of subcategories for that category.

+ Parameters
    + slug (optional, string) - Main category `slug` that will return subcategories

### Get Categories [GET]

+ Response 200 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [],
            "field_errors": {},
            "meta": {
                "total": 2,
                "showing": 2,
                "pages": 1,
                "page": 1
            },
            "data": [
                {
                    "id": 1,
                    "parent_id": null,
                    "name": "Category One",
                    "slug": "category-one",
                    "subcategories": [
                        {
                            "id": 3,
                            "parent_id": 1,
                            "name": "Subcategory One",
                            "slug": "subcategory-one"
                        },
                        {
                            "id": 4,
                            "parent_id": 1,
                            "name": "Subcategory Two",
                            "slug": "subcategory-two"
                        },
                        {
                            "id": 5,
                            "parent_id": 1,
                            "name": "Subcategory Three",
                            "slug": "subcategory-three"
                        }
                    ]
                },
                {
                    "id": 2,
                    "parent_id": null,
                    "name": "Category Two",
                    "slug": "category-two",
                    "subcategories": [
                        {
                            "id": 6,
                            "parent_id": 2,
                            "name": "Subcategory One",
                            "slug": "subcategory-one"
                        },
                        {
                            "id": 7,
                            "parent_id": 2,
                            "name": "Subcategory Two",
                            "slug": "subcategory-two"
                        },
                        {
                            "id": 8,
                            "parent_id": 2,
                            "name": "Subcategory Three",
                            "slug": "subcategory-three"
                        }
                    ]
                }
            ]
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }

## Tags [/tags]

Fetch a list of all tags being used.

### Get Tags [GET]

+ Response 200 (application/json)

        {
            "notices": [],
            "warnings": [],
            "errors": [],
            "field_errors": {},
            "meta": {
                "total": 3,
                "showing": 3,
                "pages": 1,
                "page": 1
            },
            "data": [
                {
                    "id": 1,
                    "name": "Tag One",
                    "slug": "tag-one"
                },
                {
                    "id": 2,
                    "name": "Tag Two",
                    "slug": "tag-two"
                },
                {
                    "id": 3,
                    "name": "Tag Three",
                    "slug": "tag-three"
                }
            ],
            "attribution": {
                "text": "Data Provided by StayWoke",
                "website": "https://staywoke.org",
                "link": "<a href=\"https://staywoke.org\">Data Provided by StayWoke</a>",
                "license": "https://raw.githubusercontent.com/staywoke/api/master/LICENSE",
                "report_bug": "https://github.com/staywoke/api/issues/new",
                "logo": "https://cdn.staywoke.org/common/logo.png",
                "icon": "https://cdn.staywoke.org/common/icon.png"
            }
        }